{
    "openrpc": "1.2.6",
    "info": {
        "title": "Lotus RPC API",
        "version": "1.2.1"
    },
    "methods": [
        {
            "name": "Filecoin.AddPiece",
            "description": "```go\nfunc (w *WorkerStruct) AddPiece(ctx context.Context, sector storage.SectorRef, pieceSizes []abi.UnpaddedPieceSize, newPieceSize abi.UnpaddedPieceSize, pieceData storage.Data) (storiface.CallID, error) {\n\treturn w.Internal.AddPiece(ctx, sector, pieceSizes, newPieceSize, pieceData)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "sector",
                    "description": "storage.SectorRef",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "ID": {
                                "additionalProperties": false,
                                "properties": {
                                    "Miner": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Number": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "ProofType": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "pieceSizes",
                    "description": "[]abi.UnpaddedPieceSize",
                    "summary": "",
                    "schema": {
                        "items": [
                            {
                                "title": "integer",
                                "description": "Hex representation of the integer",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "type": [
                                    "string"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "newPieceSize",
                    "description": "abi.UnpaddedPieceSize",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            1024
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "pieceData",
                    "description": "storage.Data",
                    "summary": "",
                    "schema": {
                        "additionalProperties": true
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "storiface.CallID",
                "description": "storiface.CallID",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "ID": {
                            "items": {
                                "description": "Hex representation of the integer",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "maxItems": 16,
                            "minItems": 16,
                            "type": "array"
                        },
                        "Sector": {
                            "additionalProperties": false,
                            "properties": {
                                "Miner": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Number": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1544"
            }
        },
        {
            "name": "Filecoin.Discover",
            "description": "```go\nfunc (c *WorkerStruct) Discover(ctx context.Context) (build.OpenRPCDocument, error) {\n\treturn c.Internal.Discover(ctx)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "build.OpenRPCDocument",
                "description": "build.OpenRPCDocument",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "info": {
                                "title": "Lotus RPC API",
                                "version": "1.2.1/generated=2020-11-22T08:22:42-06:00"
                            },
                            "methods": [],
                            "openrpc": "1.2.6"
                        }
                    ],
                    "patternProperties": {
                        ".*": {
                            "additionalProperties": true,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "info": {
                                "title": "Lotus RPC API",
                                "version": "1.2.1/generated=2020-11-22T08:22:42-06:00"
                            },
                            "methods": [],
                            "openrpc": "1.2.6"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1616"
            }
        },
        {
            "name": "Filecoin.Enabled",
            "description": "```go\nfunc (w *WorkerStruct) Enabled(ctx context.Context) (bool, error) {\n\treturn w.Internal.Enabled(ctx)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": true,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1600"
            }
        },
        {
            "name": "Filecoin.Fetch",
            "description": "```go\nfunc (w *WorkerStruct) Fetch(ctx context.Context, id storage.SectorRef, fileType storiface.SectorFileType, ptype storiface.PathType, am storiface.AcquireMode) (storiface.CallID, error) {\n\treturn w.Internal.Fetch(ctx, id, fileType, ptype, am)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "id",
                    "description": "storage.SectorRef",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "ID": {
                                    "Miner": 1000,
                                    "Number": 9
                                },
                                "ProofType": 8
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "ID": {
                                "additionalProperties": false,
                                "properties": {
                                    "Miner": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Number": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "ProofType": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "fileType",
                    "description": "storiface.SectorFileType",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            1
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "ptype",
                    "description": "storiface.PathType",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "sealing"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "am",
                    "description": "storiface.AcquireMode",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "move"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "storiface.CallID",
                "description": "storiface.CallID",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "ID": {
                            "items": {
                                "description": "Hex representation of the integer",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "maxItems": 16,
                            "minItems": 16,
                            "type": "array"
                        },
                        "Sector": {
                            "additionalProperties": false,
                            "properties": {
                                "Miner": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Number": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1584"
            }
        },
        {
            "name": "Filecoin.FinalizeSector",
            "description": "```go\nfunc (w *WorkerStruct) FinalizeSector(ctx context.Context, sector storage.SectorRef, keepUnsealed []storage.Range) (storiface.CallID, error) {\n\treturn w.Internal.FinalizeSector(ctx, sector, keepUnsealed)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "sector",
                    "description": "storage.SectorRef",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "ID": {
                                    "Miner": 1000,
                                    "Number": 9
                                },
                                "ProofType": 8
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "ID": {
                                "additionalProperties": false,
                                "properties": {
                                    "Miner": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Number": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "ProofType": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "keepUnsealed",
                    "description": "[]storage.Range",
                    "summary": "",
                    "schema": {
                        "items": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "Offset": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Size": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "storiface.CallID",
                "description": "storiface.CallID",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "ID": {
                            "items": {
                                "description": "Hex representation of the integer",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "maxItems": 16,
                            "minItems": 16,
                            "type": "array"
                        },
                        "Sector": {
                            "additionalProperties": false,
                            "properties": {
                                "Miner": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Number": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1564"
            }
        },
        {
            "name": "Filecoin.Info",
            "description": "```go\nfunc (w *WorkerStruct) Info(ctx context.Context) (storiface.WorkerInfo, error) {\n\treturn w.Internal.Info(ctx)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "storiface.WorkerInfo",
                "description": "storiface.WorkerInfo",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Hostname": {
                            "type": "string"
                        },
                        "Resources": {
                            "additionalProperties": false,
                            "properties": {
                                "CPUs": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "GPUs": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "MemPhysical": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "MemReserved": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "MemSwap": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Hostname": "string value",
                            "Resources": {
                                "MemPhysical": 42,
                                "MemSwap": 42,
                                "MemReserved": 42,
                                "CPUs": 42,
                                "GPUs": null
                            }
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1540"
            }
        },
        {
            "name": "Filecoin.MoveStorage",
            "description": "```go\nfunc (w *WorkerStruct) MoveStorage(ctx context.Context, sector storage.SectorRef, types storiface.SectorFileType) (storiface.CallID, error) {\n\treturn w.Internal.MoveStorage(ctx, sector, types)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "sector",
                    "description": "storage.SectorRef",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "ID": {
                                    "Miner": 1000,
                                    "Number": 9
                                },
                                "ProofType": 8
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "ID": {
                                "additionalProperties": false,
                                "properties": {
                                    "Miner": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Number": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "ProofType": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "types",
                    "description": "storiface.SectorFileType",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            1
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "storiface.CallID",
                "description": "storiface.CallID",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "ID": {
                            "items": {
                                "description": "Hex representation of the integer",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "maxItems": 16,
                            "minItems": 16,
                            "type": "array"
                        },
                        "Sector": {
                            "additionalProperties": false,
                            "properties": {
                                "Miner": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Number": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1572"
            }
        },
        {
            "name": "Filecoin.Paths",
            "description": "```go\nfunc (w *WorkerStruct) Paths(ctx context.Context) ([]stores.StoragePath, error) {\n\treturn w.Internal.Paths(ctx)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "[]stores.StoragePath",
                "description": "[]stores.StoragePath",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "CanSeal": {
                                    "type": "boolean"
                                },
                                "CanStore": {
                                    "type": "boolean"
                                },
                                "ID": {
                                    "type": "string"
                                },
                                "LocalPath": {
                                    "type": "string"
                                },
                                "Weight": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1536"
            }
        },
        {
            "name": "Filecoin.ProcessSession",
            "description": "```go\nfunc (w *WorkerStruct) ProcessSession(ctx context.Context) (uuid.UUID, error) {\n\treturn w.Internal.ProcessSession(ctx)\n}\n```",
            "summary": "returns a random UUID of worker session, generated randomly when worker\nprocess starts\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "uuid.UUID",
                "description": "uuid.UUID",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "title": "integer",
                            "description": "Hex representation of the integer",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "type": [
                                "string"
                            ]
                        }
                    ],
                    "maxItems": 16,
                    "minItems": 16,
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "07070707-0707-0707-0707-070707070707",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1608"
            }
        },
        {
            "name": "Filecoin.ReadPiece",
            "description": "```go\nfunc (w *WorkerStruct) ReadPiece(ctx context.Context, sink io.Writer, sector storage.SectorRef, offset storiface.UnpaddedByteIndex, size abi.UnpaddedPieceSize) (storiface.CallID, error) {\n\treturn w.Internal.ReadPiece(ctx, sink, sector, offset, size)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "sink",
                    "description": "io.Writer",
                    "summary": "",
                    "schema": {
                        "additionalProperties": true
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "sector",
                    "description": "storage.SectorRef",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "ID": {
                                    "Miner": 1000,
                                    "Number": 9
                                },
                                "ProofType": 8
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "ID": {
                                "additionalProperties": false,
                                "properties": {
                                    "Miner": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Number": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "ProofType": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "offset",
                    "description": "storiface.UnpaddedByteIndex",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            1040384
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "size",
                    "description": "abi.UnpaddedPieceSize",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            1024
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "storiface.CallID",
                "description": "storiface.CallID",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "ID": {
                            "items": {
                                "description": "Hex representation of the integer",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "maxItems": 16,
                            "minItems": 16,
                            "type": "array"
                        },
                        "Sector": {
                            "additionalProperties": false,
                            "properties": {
                                "Miner": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Number": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1580"
            }
        },
        {
            "name": "Filecoin.ReleaseUnsealed",
            "description": "```go\nfunc (w *WorkerStruct) ReleaseUnsealed(ctx context.Context, sector storage.SectorRef, safeToFree []storage.Range) (storiface.CallID, error) {\n\treturn w.Internal.ReleaseUnsealed(ctx, sector, safeToFree)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "sector",
                    "description": "storage.SectorRef",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "ID": {
                                    "Miner": 1000,
                                    "Number": 9
                                },
                                "ProofType": 8
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "ID": {
                                "additionalProperties": false,
                                "properties": {
                                    "Miner": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Number": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "ProofType": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "safeToFree",
                    "description": "[]storage.Range",
                    "summary": "",
                    "schema": {
                        "items": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "Offset": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Size": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "storiface.CallID",
                "description": "storiface.CallID",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "ID": {
                            "items": {
                                "description": "Hex representation of the integer",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "maxItems": 16,
                            "minItems": 16,
                            "type": "array"
                        },
                        "Sector": {
                            "additionalProperties": false,
                            "properties": {
                                "Miner": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Number": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1568"
            }
        },
        {
            "name": "Filecoin.Remove",
            "description": "```go\nfunc (w *WorkerStruct) Remove(ctx context.Context, sector abi.SectorID) error {\n\treturn w.Internal.Remove(ctx, sector)\n}\n```",
            "summary": "Storage / Other\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "sector",
                    "description": "abi.SectorID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Miner": 1000,
                                "Number": 9
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "Miner": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Number": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1588"
            }
        },
        {
            "name": "Filecoin.SealCommit1",
            "description": "```go\nfunc (w *WorkerStruct) SealCommit1(ctx context.Context, sector storage.SectorRef, ticket abi.SealRandomness, seed abi.InteractiveSealRandomness, pieces []abi.PieceInfo, cids storage.SectorCids) (storiface.CallID, error) {\n\treturn w.Internal.SealCommit1(ctx, sector, ticket, seed, pieces, cids)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "sector",
                    "description": "storage.SectorRef",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "ID": {
                                    "Miner": 1000,
                                    "Number": 9
                                },
                                "ProofType": 8
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "ID": {
                                "additionalProperties": false,
                                "properties": {
                                    "Miner": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Number": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "ProofType": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "ticket",
                    "description": "abi.SealRandomness",
                    "summary": "",
                    "schema": {
                        "items": [
                            {
                                "title": "integer",
                                "description": "Hex representation of the integer",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "type": [
                                    "string"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "seed",
                    "description": "abi.InteractiveSealRandomness",
                    "summary": "",
                    "schema": {
                        "items": [
                            {
                                "title": "integer",
                                "description": "Hex representation of the integer",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "type": [
                                    "string"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "pieces",
                    "description": "[]abi.PieceInfo",
                    "summary": "",
                    "schema": {
                        "items": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "PieceCID": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "Size": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "cids",
                    "description": "storage.SectorCids",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "Sealed": {
                                "title": "Content Identifier",
                                "type": "string"
                            },
                            "Unsealed": {
                                "title": "Content Identifier",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "storiface.CallID",
                "description": "storiface.CallID",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "ID": {
                            "items": {
                                "description": "Hex representation of the integer",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "maxItems": 16,
                            "minItems": 16,
                            "type": "array"
                        },
                        "Sector": {
                            "additionalProperties": false,
                            "properties": {
                                "Miner": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Number": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1556"
            }
        },
        {
            "name": "Filecoin.SealCommit2",
            "description": "```go\nfunc (w *WorkerStruct) SealCommit2(ctx context.Context, sector storage.SectorRef, c1o storage.Commit1Out) (storiface.CallID, error) {\n\treturn w.Internal.SealCommit2(ctx, sector, c1o)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "sector",
                    "description": "storage.SectorRef",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "ID": {
                                    "Miner": 1000,
                                    "Number": 9
                                },
                                "ProofType": 8
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "ID": {
                                "additionalProperties": false,
                                "properties": {
                                    "Miner": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Number": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "ProofType": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "c1o",
                    "description": "storage.Commit1Out",
                    "summary": "",
                    "schema": {
                        "items": [
                            {
                                "title": "integer",
                                "description": "Hex representation of the integer",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "type": [
                                    "string"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "storiface.CallID",
                "description": "storiface.CallID",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "ID": {
                            "items": {
                                "description": "Hex representation of the integer",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "maxItems": 16,
                            "minItems": 16,
                            "type": "array"
                        },
                        "Sector": {
                            "additionalProperties": false,
                            "properties": {
                                "Miner": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Number": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1560"
            }
        },
        {
            "name": "Filecoin.SealPreCommit1",
            "description": "```go\nfunc (w *WorkerStruct) SealPreCommit1(ctx context.Context, sector storage.SectorRef, ticket abi.SealRandomness, pieces []abi.PieceInfo) (storiface.CallID, error) {\n\treturn w.Internal.SealPreCommit1(ctx, sector, ticket, pieces)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "sector",
                    "description": "storage.SectorRef",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "ID": {
                                    "Miner": 1000,
                                    "Number": 9
                                },
                                "ProofType": 8
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "ID": {
                                "additionalProperties": false,
                                "properties": {
                                    "Miner": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Number": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "ProofType": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "ticket",
                    "description": "abi.SealRandomness",
                    "summary": "",
                    "schema": {
                        "items": [
                            {
                                "title": "integer",
                                "description": "Hex representation of the integer",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "type": [
                                    "string"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "pieces",
                    "description": "[]abi.PieceInfo",
                    "summary": "",
                    "schema": {
                        "items": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "PieceCID": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "Size": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "storiface.CallID",
                "description": "storiface.CallID",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "ID": {
                            "items": {
                                "description": "Hex representation of the integer",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "maxItems": 16,
                            "minItems": 16,
                            "type": "array"
                        },
                        "Sector": {
                            "additionalProperties": false,
                            "properties": {
                                "Miner": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Number": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1548"
            }
        },
        {
            "name": "Filecoin.SealPreCommit2",
            "description": "```go\nfunc (w *WorkerStruct) SealPreCommit2(ctx context.Context, sector storage.SectorRef, pc1o storage.PreCommit1Out) (storiface.CallID, error) {\n\treturn w.Internal.SealPreCommit2(ctx, sector, pc1o)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "sector",
                    "description": "storage.SectorRef",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "ID": {
                                    "Miner": 1000,
                                    "Number": 9
                                },
                                "ProofType": 8
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "ID": {
                                "additionalProperties": false,
                                "properties": {
                                    "Miner": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Number": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "ProofType": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "pc1o",
                    "description": "storage.PreCommit1Out",
                    "summary": "",
                    "schema": {
                        "items": [
                            {
                                "title": "integer",
                                "description": "Hex representation of the integer",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "type": [
                                    "string"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "storiface.CallID",
                "description": "storiface.CallID",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "ID": {
                            "items": {
                                "description": "Hex representation of the integer",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "maxItems": 16,
                            "minItems": 16,
                            "type": "array"
                        },
                        "Sector": {
                            "additionalProperties": false,
                            "properties": {
                                "Miner": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Number": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1552"
            }
        },
        {
            "name": "Filecoin.Session",
            "description": "```go\nfunc (w *WorkerStruct) Session(ctx context.Context) (uuid.UUID, error) {\n\treturn w.Internal.Session(ctx)\n}\n```",
            "summary": "Like ProcessSession, but returns an error when worker is disabled\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "uuid.UUID",
                "description": "uuid.UUID",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "title": "integer",
                            "description": "Hex representation of the integer",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "type": [
                                "string"
                            ]
                        }
                    ],
                    "maxItems": 16,
                    "minItems": 16,
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "07070707-0707-0707-0707-070707070707",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1612"
            }
        },
        {
            "name": "Filecoin.SetEnabled",
            "description": "```go\nfunc (w *WorkerStruct) SetEnabled(ctx context.Context, enabled bool) error {\n\treturn w.Internal.SetEnabled(ctx, enabled)\n}\n```",
            "summary": "SetEnabled marks the worker as enabled/disabled. Not that this setting\nmay take a few seconds to propagate to task scheduler\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "enabled",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1596"
            }
        },
        {
            "name": "Filecoin.StorageAddLocal",
            "description": "```go\nfunc (w *WorkerStruct) StorageAddLocal(ctx context.Context, path string) error {\n\treturn w.Internal.StorageAddLocal(ctx, path)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "path",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1592"
            }
        },
        {
            "name": "Filecoin.TaskTypes",
            "description": "```go\nfunc (w *WorkerStruct) TaskTypes(ctx context.Context) (map[sealtasks.TaskType]struct{}, error) {\n\treturn w.Internal.TaskTypes(ctx)\n}\n```",
            "summary": "TaskType -\u003e Weight\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "map[sealtasks.TaskType]struct{}",
                "description": "map[sealtasks.TaskType]struct{}",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "seal/v0/precommit/2": {}
                        }
                    ],
                    "patternProperties": {
                        ".*": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "seal/v0/precommit/2": {}
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1532"
            }
        },
        {
            "name": "Filecoin.UnsealPiece",
            "description": "```go\nfunc (w *WorkerStruct) UnsealPiece(ctx context.Context, sector storage.SectorRef, offset storiface.UnpaddedByteIndex, size abi.UnpaddedPieceSize, ticket abi.SealRandomness, c cid.Cid) (storiface.CallID, error) {\n\treturn w.Internal.UnsealPiece(ctx, sector, offset, size, ticket, c)\n}\n```",
            "summary": "",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "sector",
                    "description": "storage.SectorRef",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "ID": {
                                    "Miner": 1000,
                                    "Number": 9
                                },
                                "ProofType": 8
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "ID": {
                                "additionalProperties": false,
                                "properties": {
                                    "Miner": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Number": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "ProofType": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "offset",
                    "description": "storiface.UnpaddedByteIndex",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            1040384
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "size",
                    "description": "abi.UnpaddedPieceSize",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            1024
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "ticket",
                    "description": "abi.SealRandomness",
                    "summary": "",
                    "schema": {
                        "items": [
                            {
                                "title": "integer",
                                "description": "Hex representation of the integer",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "type": [
                                    "string"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "c",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "storiface.CallID",
                "description": "storiface.CallID",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "ID": {
                            "items": {
                                "description": "Hex representation of the integer",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "maxItems": 16,
                            "minItems": 16,
                            "type": "array"
                        },
                        "Sector": {
                            "additionalProperties": false,
                            "properties": {
                                "Miner": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Number": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Sector": {
                                "Miner": 1000,
                                "Number": 9
                            },
                            "ID": "07070707-0707-0707-0707-070707070707"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1576"
            }
        },
        {
            "name": "Filecoin.Version",
            "description": "```go\nfunc (w *WorkerStruct) Version(ctx context.Context) (build.Version, error) {\n\treturn w.Internal.Version(ctx)\n}\n```",
            "summary": "TODO: Info() (name, ...) ?\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "build.Version",
                "description": "build.Version",
                "summary": "",
                "schema": {
                    "title": "integer",
                    "description": "Hex representation of the integer",
                    "examples": [
                        65536
                    ],
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": 65536,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1528"
            }
        },
        {
            "name": "Filecoin.WaitQuiet",
            "description": "```go\nfunc (w *WorkerStruct) WaitQuiet(ctx context.Context) error {\n\treturn w.Internal.WaitQuiet(ctx)\n}\n```",
            "summary": "WaitQuiet blocks until there are no tasks running\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1604"
            }
        }
    ]
}
