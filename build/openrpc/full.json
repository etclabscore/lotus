{
    "openrpc": "1.2.6",
    "info": {
        "title": "Lotus RPC API",
        "version": "1.2.1/generated=2020-11-22T08:27:30-06:00"
    },
    "methods": [
        {
            "name": "Filecoin.BeaconGetEntry",
            "description": "```go\nfunc (c *FullNodeStruct) BeaconGetEntry(ctx context.Context, epoch abi.ChainEpoch) (*types.BeaconEntry, error) {\n\treturn c.Internal.BeaconGetEntry(ctx, epoch)\n}\n```",
            "summary": "BeaconGetEntry returns the beacon entry for the given filecoin epoch. If\nthe entry has not yet been produced, the call will block until the entry\nbecomes available\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "epoch",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            10101
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.BeaconEntry",
                "description": "*types.BeaconEntry",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Data": {
                            "media": {
                                "binaryEncoding": "base64"
                            },
                            "type": "string"
                        },
                        "Round": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Round": 42,
                            "Data": "Ynl0ZSBhcnJheQ=="
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L858"
            }
        },
        {
            "name": "Filecoin.ChainDeleteObj",
            "description": "```go\nfunc (c *FullNodeStruct) ChainDeleteObj(ctx context.Context, obj cid.Cid) error {\n\treturn c.Internal.ChainDeleteObj(ctx, obj)\n}\n```",
            "summary": "ChainDeleteObj deletes node referenced by the given CID\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "obj",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L818"
            }
        },
        {
            "name": "Filecoin.ChainGetBlock",
            "description": "```go\nfunc (c *FullNodeStruct) ChainGetBlock(ctx context.Context, b cid.Cid) (*types.BlockHeader, error) {\n\treturn c.Internal.ChainGetBlock(ctx, b)\n}\n```",
            "summary": "ChainGetBlock returns the block specified by the given CID.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "b",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.BlockHeader",
                "description": "*types.BlockHeader",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "BLSAggregate": {
                            "additionalProperties": false,
                            "properties": {
                                "Data": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "Type": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "BeaconEntries": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Round": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "BlockSig": {
                            "additionalProperties": false,
                            "properties": {
                                "Data": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "Type": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "ElectionProof": {
                            "additionalProperties": false,
                            "properties": {
                                "VRFProof": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "WinCount": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "ForkSignaling": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Height": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Messages": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Miner": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "ParentBaseFee": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "ParentMessageReceipts": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "ParentStateRoot": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "ParentWeight": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Parents": {
                            "items": {
                                "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                                "title": "Content Identifier",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "Ticket": {
                            "additionalProperties": false,
                            "properties": {
                                "VRFProof": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "Timestamp": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "WinPoStProof": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "PoStProof": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "ProofBytes": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Miner": "f01234",
                            "Ticket": {
                                "VRFProof": "Ynl0ZSBhcnJheQ=="
                            },
                            "ElectionProof": {
                                "WinCount": 9,
                                "VRFProof": "Ynl0ZSBhcnJheQ=="
                            },
                            "BeaconEntries": null,
                            "WinPoStProof": null,
                            "Parents": null,
                            "ParentWeight": "0",
                            "Height": 10101,
                            "ParentStateRoot": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "ParentMessageReceipts": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Messages": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "BLSAggregate": {
                                "Type": 2,
                                "Data": "Ynl0ZSBhcnJheQ=="
                            },
                            "Timestamp": 42,
                            "BlockSig": {
                                "Type": 2,
                                "Data": "Ynl0ZSBhcnJheQ=="
                            },
                            "ForkSignaling": 42,
                            "ParentBaseFee": "0"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L790"
            }
        },
        {
            "name": "Filecoin.ChainGetBlockMessages",
            "description": "```go\nfunc (c *FullNodeStruct) ChainGetBlockMessages(ctx context.Context, b cid.Cid) (*api.BlockMessages, error) {\n\treturn c.Internal.ChainGetBlockMessages(ctx, b)\n}\n```",
            "summary": "ChainGetBlockMessages returns messages stored in the specified block.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "b",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.BlockMessages",
                "description": "*api.BlockMessages",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "BlsMessages": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "From": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasFeeCap": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasLimit": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "GasPremium": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Method": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Nonce": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Params": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "To": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Value": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Version": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "Cids": {
                            "items": {
                                "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                                "title": "Content Identifier",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "SecpkMessages": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "Message": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "From": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasFeeCap": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasLimit": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "GasPremium": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Method": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "Nonce": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "Params": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "To": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Value": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Version": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Signature": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Data": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "Type": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "BlsMessages": null,
                            "SecpkMessages": null,
                            "Cids": null
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L798"
            }
        },
        {
            "name": "Filecoin.ChainGetGenesis",
            "description": "```go\nfunc (c *FullNodeStruct) ChainGetGenesis(ctx context.Context) (*types.TipSet, error) {\n\treturn c.Internal.ChainGetGenesis(ctx)\n}\n```",
            "summary": "ChainGetGenesis returns the genesis tipset.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "*types.TipSet",
                "description": "*types.TipSet",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Cids": null,
                            "Blocks": null,
                            "Height": 0
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L834"
            }
        },
        {
            "name": "Filecoin.ChainGetMessage",
            "description": "```go\nfunc (c *FullNodeStruct) ChainGetMessage(ctx context.Context, mc cid.Cid) (*types.Message, error) {\n\treturn c.Internal.ChainGetMessage(ctx, mc)\n}\n```",
            "summary": "ChainGetMessage reads a message referenced by the specified CID from the\nchain blockstore.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "mc",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.Message",
                "description": "*types.Message",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "From": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "GasFeeCap": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "GasLimit": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "GasPremium": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Method": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Nonce": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Params": {
                            "media": {
                                "binaryEncoding": "base64"
                            },
                            "type": "string"
                        },
                        "To": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Value": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Version": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Version": 42,
                            "To": "f01234",
                            "From": "f01234",
                            "Nonce": 42,
                            "Value": "0",
                            "GasLimit": 9,
                            "GasFeeCap": "0",
                            "GasPremium": "0",
                            "Method": 1,
                            "Params": "Ynl0ZSBhcnJheQ==",
                            "CID": {
                                "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                            }
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L846"
            }
        },
        {
            "name": "Filecoin.ChainGetNode",
            "description": "```go\nfunc (c *FullNodeStruct) ChainGetNode(ctx context.Context, p string) (*api.IpldObject, error) {\n\treturn c.Internal.ChainGetNode(ctx, p)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.IpldObject",
                "description": "*api.IpldObject",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Cid": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Obj": {
                            "additionalProperties": true,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Cid": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Obj": {}
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L842"
            }
        },
        {
            "name": "Filecoin.ChainGetParentMessages",
            "description": "```go\nfunc (c *FullNodeStruct) ChainGetParentMessages(ctx context.Context, b cid.Cid) ([]api.Message, error) {\n\treturn c.Internal.ChainGetParentMessages(ctx, b)\n}\n```",
            "summary": "ChainGetParentMessages returns messages stored in parent tipset of the\nspecified block.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "b",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]api.Message",
                "description": "[]api.Message",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Cid": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "Message": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Cid": {
                                            "title": "Content Identifier",
                                            "type": "string"
                                        },
                                        "Message": {}
                                    },
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L806"
            }
        },
        {
            "name": "Filecoin.ChainGetParentReceipts",
            "description": "```go\nfunc (c *FullNodeStruct) ChainGetParentReceipts(ctx context.Context, b cid.Cid) ([]*types.MessageReceipt, error) {\n\treturn c.Internal.ChainGetParentReceipts(ctx, b)\n}\n```",
            "summary": "ChainGetParentReceipts returns receipts for messages in parent tipset of\nthe specified block.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "b",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*types.MessageReceipt",
                "description": "[]*types.MessageReceipt",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "ExitCode": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "GasUsed": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Return": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L802"
            }
        },
        {
            "name": "Filecoin.ChainGetPath",
            "description": "```go\nfunc (c *FullNodeStruct) ChainGetPath(ctx context.Context, from types.TipSetKey, to types.TipSetKey) ([]*api.HeadChange, error) {\n\treturn c.Internal.ChainGetPath(ctx, from, to)\n}\n```",
            "summary": "ChainGetPath returns a set of revert/apply operations needed to get from\none tipset to another, for example:\n```\n       to\n        ^\nfrom   tAA\n  ^     ^\ntBA    tAB\n ^---*--^\n     ^\n    tRR\n```\nWould return `[revert(tBA), apply(tAB), apply(tAA)]`\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "from",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "to",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*api.HeadChange",
                "description": "[]*api.HeadChange",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Type": {
                                    "type": "string"
                                },
                                "Val": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L850"
            }
        },
        {
            "name": "Filecoin.ChainGetRandomnessFromBeacon",
            "description": "```go\nfunc (c *FullNodeStruct) ChainGetRandomnessFromBeacon(ctx context.Context, tsk types.TipSetKey, personalization crypto.DomainSeparationTag, randEpoch abi.ChainEpoch, entropy []byte) (abi.Randomness, error) {\n\treturn c.Internal.ChainGetRandomnessFromBeacon(ctx, tsk, personalization, randEpoch, entropy)\n}\n```",
            "summary": "ChainGetRandomnessFromBeacon is used to sample the beacon for randomness.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "personalization",
                    "description": "crypto.DomainSeparationTag",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            2
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "randEpoch",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            10101
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "entropy",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "abi.Randomness",
                "description": "abi.Randomness",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "title": "integer",
                            "description": "Hex representation of the integer",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "type": [
                                "string"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L726"
            }
        },
        {
            "name": "Filecoin.ChainGetRandomnessFromTickets",
            "description": "```go\nfunc (c *FullNodeStruct) ChainGetRandomnessFromTickets(ctx context.Context, tsk types.TipSetKey, personalization crypto.DomainSeparationTag, randEpoch abi.ChainEpoch, entropy []byte) (abi.Randomness, error) {\n\treturn c.Internal.ChainGetRandomnessFromTickets(ctx, tsk, personalization, randEpoch, entropy)\n}\n```",
            "summary": "ChainGetRandomnessFromTickets is used to sample the chain for randomness.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "personalization",
                    "description": "crypto.DomainSeparationTag",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            2
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "randEpoch",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            10101
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "entropy",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "abi.Randomness",
                "description": "abi.Randomness",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "title": "integer",
                            "description": "Hex representation of the integer",
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "type": [
                                "string"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L722"
            }
        },
        {
            "name": "Filecoin.ChainGetTipSet",
            "description": "```go\nfunc (c *FullNodeStruct) ChainGetTipSet(ctx context.Context, key types.TipSetKey) (*types.TipSet, error) {\n\treturn c.Internal.ChainGetTipSet(ctx, key)\n}\n```",
            "summary": "ChainGetTipSet returns the tipset specified by the given TipSetKey.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "key",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.TipSet",
                "description": "*types.TipSet",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Cids": null,
                            "Blocks": null,
                            "Height": 0
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L794"
            }
        },
        {
            "name": "Filecoin.ChainGetTipSetByHeight",
            "description": "```go\nfunc (c *FullNodeStruct) ChainGetTipSetByHeight(ctx context.Context, h abi.ChainEpoch, tsk types.TipSetKey) (*types.TipSet, error) {\n\treturn c.Internal.ChainGetTipSetByHeight(ctx, h, tsk)\n}\n```",
            "summary": "ChainGetTipSetByHeight looks back for a tipset at the specified epoch.\nIf there are no blocks at the specified epoch, a tipset at an earlier epoch\nwill be returned.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "h",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            10101
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.TipSet",
                "description": "*types.TipSet",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Cids": null,
                            "Blocks": null,
                            "Height": 0
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L730"
            }
        },
        {
            "name": "Filecoin.ChainHasObj",
            "description": "```go\nfunc (c *FullNodeStruct) ChainHasObj(ctx context.Context, o cid.Cid) (bool, error) {\n\treturn c.Internal.ChainHasObj(ctx, o)\n}\n```",
            "summary": "ChainHasObj checks if a given CID exists in the chain blockstore.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "o",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": true,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L822"
            }
        },
        {
            "name": "Filecoin.ChainHead",
            "description": "```go\nfunc (c *FullNodeStruct) ChainHead(ctx context.Context) (*types.TipSet, error) {\n\treturn c.Internal.ChainHead(ctx)\n}\n```",
            "summary": "ChainHead returns the current head of the chain.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "*types.TipSet",
                "description": "*types.TipSet",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Cids": null,
                            "Blocks": null,
                            "Height": 0
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L718"
            }
        },
        {
            "name": "Filecoin.ChainReadObj",
            "description": "```go\nfunc (c *FullNodeStruct) ChainReadObj(ctx context.Context, obj cid.Cid) ([]byte, error) {\n\treturn c.Internal.ChainReadObj(ctx, obj)\n}\n```",
            "summary": "ChainReadObj reads ipld nodes referenced by the specified CID from chain\nblockstore and returns raw bytes.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "obj",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]byte",
                "description": "[]byte",
                "summary": "",
                "schema": {
                    "examples": [
                        "Ynl0ZSBhcnJheQ=="
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "Ynl0ZSBhcnJheQ==",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L814"
            }
        },
        {
            "name": "Filecoin.ChainSetHead",
            "description": "```go\nfunc (c *FullNodeStruct) ChainSetHead(ctx context.Context, tsk types.TipSetKey) error {\n\treturn c.Internal.ChainSetHead(ctx, tsk)\n}\n```",
            "summary": "ChainSetHead forcefully sets current chain head. Use with caution.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L830"
            }
        },
        {
            "name": "Filecoin.ChainStatObj",
            "description": "```go\nfunc (c *FullNodeStruct) ChainStatObj(ctx context.Context, obj, base cid.Cid) (api.ObjStat, error) {\n\treturn c.Internal.ChainStatObj(ctx, obj, base)\n}\n```",
            "summary": "ChainStatObj returns statistics about the graph referenced by 'obj'.\nIf 'base' is also specified, then the returned stat will be a diff\nbetween the two objects.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "obj",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "base",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "api.ObjStat",
                "description": "api.ObjStat",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Links": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Size": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Size": 42,
                            "Links": 42
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L826"
            }
        },
        {
            "name": "Filecoin.ChainTipSetWeight",
            "description": "```go\nfunc (c *FullNodeStruct) ChainTipSetWeight(ctx context.Context, tsk types.TipSetKey) (types.BigInt, error) {\n\treturn c.Internal.ChainTipSetWeight(ctx, tsk)\n}\n```",
            "summary": "ChainTipSetWeight computes weight for the specified tipset.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "0",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L838"
            }
        },
        {
            "name": "Filecoin.ClientCalcCommP",
            "description": "```go\nfunc (c *FullNodeStruct) ClientCalcCommP(ctx context.Context, inpath string) (*api.CommPRet, error) {\n\treturn c.Internal.ClientCalcCommP(ctx, inpath)\n}\n```",
            "summary": "ClientCalcCommP calculates the CommP for a specified file\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "inpath",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.CommPRet",
                "description": "*api.CommPRet",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Root": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Size": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Root": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Size": 1024
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L614"
            }
        },
        {
            "name": "Filecoin.ClientCancelDataTransfer",
            "description": "```go\nfunc (c *FullNodeStruct) ClientCancelDataTransfer(ctx context.Context, transferID datatransfer.TransferID, otherPeer peer.ID, isInitiator bool) error {\n\treturn c.Internal.ClientCancelDataTransfer(ctx, transferID, otherPeer, isInitiator)\n}\n```",
            "summary": "ClientCancelDataTransfer cancels a data transfer with the given transfer ID and other peer\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "transferID",
                    "description": "datatransfer.TransferID",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            3
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "otherPeer",
                    "description": "peer.ID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "isInitiator",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L638"
            }
        },
        {
            "name": "Filecoin.ClientDealPieceCID",
            "description": "```go\nfunc (c *FullNodeStruct) ClientDealPieceCID(ctx context.Context, root cid.Cid) (api.DataCIDSize, error) {\n\treturn c.Internal.ClientDealPieceCID(ctx, root)\n}\n```",
            "summary": "ClientCalcCommP calculates the CommP and data size of the specified CID\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "root",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "api.DataCIDSize",
                "description": "api.DataCIDSize",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "PayloadSize": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "PieceCID": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "PieceSize": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "PayloadSize": 9,
                            "PieceSize": 1032,
                            "PieceCID": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L610"
            }
        },
        {
            "name": "Filecoin.ClientDealSize",
            "description": "```go\nfunc (c *FullNodeStruct) ClientDealSize(ctx context.Context, root cid.Cid) (api.DataSize, error) {\n\treturn c.Internal.ClientDealSize(ctx, root)\n}\n```",
            "summary": "ClientDealSize calculates real deal data size\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "root",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "api.DataSize",
                "description": "api.DataSize",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "PayloadSize": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "PieceSize": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "PayloadSize": 9,
                            "PieceSize": 1032
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L622"
            }
        },
        {
            "name": "Filecoin.ClientFindData",
            "description": "```go\nfunc (c *FullNodeStruct) ClientFindData(ctx context.Context, root cid.Cid, piece *cid.Cid) ([]api.QueryOffer, error) {\n\treturn c.Internal.ClientFindData(ctx, root, piece)\n}\n```",
            "summary": "ClientFindData identifies peers that have a certain file, and returns QueryOffers (one per peer).\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "root",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "piece",
                    "description": "*cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]api.QueryOffer",
                "description": "[]api.QueryOffer",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Err": {
                                    "type": "string"
                                },
                                "MinPrice": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Miner": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "MinerPeer": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Address": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "ID": {
                                            "type": "string"
                                        },
                                        "PieceCID": {
                                            "title": "Content Identifier",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "PaymentInterval": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "PaymentIntervalIncrease": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Piece": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "Root": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "Size": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "UnsealPrice": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L570"
            }
        },
        {
            "name": "Filecoin.ClientGenCar",
            "description": "```go\nfunc (c *FullNodeStruct) ClientGenCar(ctx context.Context, ref api.FileRef, outpath string) error {\n\treturn c.Internal.ClientGenCar(ctx, ref, outpath)\n}\n```",
            "summary": "ClientGenCar generates a CAR file for the specified file.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "ref",
                    "description": "api.FileRef",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "IsCAR": {
                                "type": "boolean"
                            },
                            "Path": {
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "outpath",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L618"
            }
        },
        {
            "name": "Filecoin.ClientGetDealInfo",
            "description": "```go\nfunc (c *FullNodeStruct) ClientGetDealInfo(ctx context.Context, deal cid.Cid) (*api.DealInfo, error) {\n\treturn c.Internal.ClientGetDealInfo(ctx, deal)\n}\n```",
            "summary": "ClientGetDealInfo returns the latest information about a given deal.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "deal",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.DealInfo",
                "description": "*api.DealInfo",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "CreationTime": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "DataRef": {
                            "additionalProperties": false,
                            "properties": {
                                "PieceCid": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "PieceSize": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Root": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "TransferType": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "DealID": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Duration": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Message": {
                            "type": "string"
                        },
                        "PieceCID": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "PricePerEpoch": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "ProposalCid": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Provider": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Size": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "State": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Verified": {
                            "type": "boolean"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "ProposalCid": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "State": 42,
                            "Message": "string value",
                            "Provider": "f01234",
                            "DataRef": {
                                "TransferType": "string value",
                                "Root": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "PieceCid": null,
                                "PieceSize": 1024
                            },
                            "PieceCID": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Size": 42,
                            "PricePerEpoch": "0",
                            "Duration": 42,
                            "DealID": 5432,
                            "CreationTime": "0001-01-01T00:00:00Z",
                            "Verified": true
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L582"
            }
        },
        {
            "name": "Filecoin.ClientGetDealStatus",
            "description": "```go\nfunc (c *FullNodeStruct) ClientGetDealStatus(ctx context.Context, statusCode uint64) (string, error) {\n\treturn c.Internal.ClientGetDealStatus(ctx, statusCode)\n}\n```",
            "summary": "ClientGetDealStatus returns status given a code\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "statusCode",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            42
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "string",
                "description": "string",
                "summary": "",
                "schema": {
                    "examples": [
                        "string value"
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "string value",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L586"
            }
        },
        {
            "name": "Filecoin.ClientHasLocal",
            "description": "```go\nfunc (c *FullNodeStruct) ClientHasLocal(ctx context.Context, root cid.Cid) (bool, error) {\n\treturn c.Internal.ClientHasLocal(ctx, root)\n}\n```",
            "summary": "ClientHasLocal indicates whether a certain CID is locally stored.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "root",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": true,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L566"
            }
        },
        {
            "name": "Filecoin.ClientImport",
            "description": "```go\nfunc (c *FullNodeStruct) ClientImport(ctx context.Context, ref api.FileRef) (*api.ImportRes, error) {\n\treturn c.Internal.ClientImport(ctx, ref)\n}\n```",
            "summary": "ClientImport imports file under the specified path into filestore.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "ref",
                    "description": "api.FileRef",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "Path": "string value",
                                "IsCAR": true
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "IsCAR": {
                                "type": "boolean"
                            },
                            "Path": {
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.ImportRes",
                "description": "*api.ImportRes",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "ImportID": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Root": {
                            "title": "Content Identifier",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Root": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "ImportID": 50
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L562"
            }
        },
        {
            "name": "Filecoin.ClientListDataTransfers",
            "description": "```go\nfunc (c *FullNodeStruct) ClientListDataTransfers(ctx context.Context) ([]api.DataTransferChannel, error) {\n\treturn c.Internal.ClientListDataTransfers(ctx)\n}\n```",
            "summary": "ClientListTransfers returns the status of all ongoing transfers of data\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "[]api.DataTransferChannel",
                "description": "[]api.DataTransferChannel",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "BaseCID": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "IsInitiator": {
                                    "type": "boolean"
                                },
                                "IsSender": {
                                    "type": "boolean"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "OtherPeer": {
                                    "type": "string"
                                },
                                "Status": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "TransferID": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Transferred": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Voucher": {
                                    "type": "string"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L626"
            }
        },
        {
            "name": "Filecoin.ClientListDeals",
            "description": "```go\nfunc (c *FullNodeStruct) ClientListDeals(ctx context.Context) ([]api.DealInfo, error) {\n\treturn c.Internal.ClientListDeals(ctx)\n}\n```",
            "summary": "ClientListDeals returns information about the deals made by the local client.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "[]api.DealInfo",
                "description": "[]api.DealInfo",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "CreationTime": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "DataRef": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "PieceCid": {
                                            "title": "Content Identifier",
                                            "type": "string"
                                        },
                                        "PieceSize": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "Root": {
                                            "title": "Content Identifier",
                                            "type": "string"
                                        },
                                        "TransferType": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "DealID": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Duration": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Message": {
                                    "type": "string"
                                },
                                "PieceCID": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "PricePerEpoch": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ProposalCid": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "Provider": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Size": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "State": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Verified": {
                                    "type": "boolean"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L590"
            }
        },
        {
            "name": "Filecoin.ClientListImports",
            "description": "```go\nfunc (c *FullNodeStruct) ClientListImports(ctx context.Context) ([]api.Import, error) {\n\treturn c.Internal.ClientListImports(ctx)\n}\n```",
            "summary": "ClientListImports lists imported files and their root CIDs\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "[]api.Import",
                "description": "[]api.Import",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Err": {
                                    "type": "string"
                                },
                                "FilePath": {
                                    "type": "string"
                                },
                                "Key": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Root": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "Source": {
                                    "type": "string"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L554"
            }
        },
        {
            "name": "Filecoin.ClientMinerQueryOffer",
            "description": "```go\nfunc (c *FullNodeStruct) ClientMinerQueryOffer(ctx context.Context, miner address.Address, root cid.Cid, piece *cid.Cid) (api.QueryOffer, error) {\n\treturn c.Internal.ClientMinerQueryOffer(ctx, miner, root, piece)\n}\n```",
            "summary": "ClientMinerQueryOffer returns a QueryOffer for the specific miner and file.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "miner",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "root",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "piece",
                    "description": "*cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "api.QueryOffer",
                "description": "api.QueryOffer",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Err": "string value",
                            "Root": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Piece": null,
                            "Size": 42,
                            "MinPrice": "0",
                            "UnsealPrice": "0",
                            "PaymentInterval": 42,
                            "PaymentIntervalIncrease": 42,
                            "Miner": "f01234",
                            "MinerPeer": {
                                "Address": "f01234",
                                "ID": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",
                                "PieceCID": null
                            }
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Err": {
                            "type": "string"
                        },
                        "MinPrice": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Miner": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "MinerPeer": {
                            "additionalProperties": false,
                            "properties": {
                                "Address": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ID": {
                                    "type": "string"
                                },
                                "PieceCID": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "PaymentInterval": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "PaymentIntervalIncrease": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Piece": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Root": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Size": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "UnsealPrice": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Err": "string value",
                            "Root": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Piece": null,
                            "Size": 42,
                            "MinPrice": "0",
                            "UnsealPrice": "0",
                            "PaymentInterval": 42,
                            "PaymentIntervalIncrease": 42,
                            "Miner": "f01234",
                            "MinerPeer": {
                                "Address": "f01234",
                                "ID": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",
                                "PieceCID": null
                            }
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L574"
            }
        },
        {
            "name": "Filecoin.ClientQueryAsk",
            "description": "```go\nfunc (c *FullNodeStruct) ClientQueryAsk(ctx context.Context, p peer.ID, miner address.Address) (*storagemarket.StorageAsk, error) {\n\treturn c.Internal.ClientQueryAsk(ctx, p, miner)\n}\n```",
            "summary": "ClientQueryAsk returns a signed StorageAsk from the specified miner.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "p",
                    "description": "peer.ID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "miner",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*storagemarket.StorageAsk",
                "description": "*storagemarket.StorageAsk",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Expiry": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "MaxPieceSize": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "MinPieceSize": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Miner": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Price": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "SeqNo": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Timestamp": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "VerifiedPrice": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Price": "0",
                            "VerifiedPrice": "0",
                            "MinPieceSize": 1032,
                            "MaxPieceSize": 1032,
                            "Miner": "f01234",
                            "Timestamp": 10101,
                            "Expiry": 10101,
                            "SeqNo": 42
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L606"
            }
        },
        {
            "name": "Filecoin.ClientRemoveImport",
            "description": "```go\nfunc (c *FullNodeStruct) ClientRemoveImport(ctx context.Context, importID multistore.StoreID) error {\n\treturn c.Internal.ClientRemoveImport(ctx, importID)\n}\n```",
            "summary": "ClientRemoveImport removes file import\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "importID",
                    "description": "multistore.StoreID",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            50
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L558"
            }
        },
        {
            "name": "Filecoin.ClientRestartDataTransfer",
            "description": "```go\nfunc (c *FullNodeStruct) ClientRestartDataTransfer(ctx context.Context, transferID datatransfer.TransferID, otherPeer peer.ID, isInitiator bool) error {\n\treturn c.Internal.ClientRestartDataTransfer(ctx, transferID, otherPeer, isInitiator)\n}\n```",
            "summary": "ClientRestartDataTransfer attempts to restart a data transfer with the given transfer ID and other peer\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "transferID",
                    "description": "datatransfer.TransferID",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            3
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "otherPeer",
                    "description": "peer.ID",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "isInitiator",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L634"
            }
        },
        {
            "name": "Filecoin.ClientRetrieve",
            "description": "```go\nfunc (c *FullNodeStruct) ClientRetrieve(ctx context.Context, order api.RetrievalOrder, ref *api.FileRef) error {\n\treturn c.Internal.ClientRetrieve(ctx, order, ref)\n}\n```",
            "summary": "ClientRetrieve initiates the retrieval of a file, as specified in the order.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "order",
                    "description": "api.RetrievalOrder",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "Client": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Miner": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "MinerPeer": {
                                "additionalProperties": false,
                                "properties": {
                                    "Address": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "ID": {
                                        "type": "string"
                                    },
                                    "PieceCID": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "PaymentInterval": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "PaymentIntervalIncrease": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Piece": {
                                "title": "Content Identifier",
                                "type": "string"
                            },
                            "Root": {
                                "title": "Content Identifier",
                                "type": "string"
                            },
                            "Size": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Total": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "UnsealPrice": {
                                "additionalProperties": false,
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "ref",
                    "description": "*api.FileRef",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "IsCAR": {
                                "type": "boolean"
                            },
                            "Path": {
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L598"
            }
        },
        {
            "name": "Filecoin.ClientRetrieveTryRestartInsufficientFunds",
            "description": "```go\nfunc (c *FullNodeStruct) ClientRetrieveTryRestartInsufficientFunds(ctx context.Context, paymentChannel address.Address) error {\n\treturn c.Internal.ClientRetrieveTryRestartInsufficientFunds(ctx, paymentChannel)\n}\n```",
            "summary": "ClientRetrieveTryRestartInsufficientFunds attempts to restart stalled retrievals on a given payment channel\nwhich are stuck due to insufficient funds\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "paymentChannel",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L642"
            }
        },
        {
            "name": "Filecoin.ClientStartDeal",
            "description": "```go\nfunc (c *FullNodeStruct) ClientStartDeal(ctx context.Context, params *api.StartDealParams) (*cid.Cid, error) {\n\treturn c.Internal.ClientStartDeal(ctx, params)\n}\n```",
            "summary": "ClientStartDeal proposes a deal with a miner.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "params",
                    "description": "*api.StartDealParams",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "Data": {
                                "additionalProperties": false,
                                "properties": {
                                    "PieceCid": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "PieceSize": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Root": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "TransferType": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "DealStartEpoch": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "EpochPrice": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "FastRetrieval": {
                                "type": "boolean"
                            },
                            "MinBlocksDuration": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Miner": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "ProviderCollateral": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "VerifiedDeal": {
                                "type": "boolean"
                            },
                            "Wallet": {
                                "additionalProperties": false,
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*cid.Cid",
                "description": "*cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L578"
            }
        },
        {
            "name": "Filecoin.CreateBackup",
            "description": "```go\nfunc (c *FullNodeStruct) CreateBackup(ctx context.Context, fpath string) error {\n\treturn c.Internal.CreateBackup(ctx, fpath)\n}\n```",
            "summary": "CreateBackup creates node backup onder the specified file name. The\nmethod requires that the lotus daemon is running with the\nLOTUS_BACKUP_BASE_PATH environment variable set to some path, and that\nthe path specified when calling CreateBackup is within the base path\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "fpath",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1214"
            }
        },
        {
            "name": "Filecoin.GasEstimateFeeCap",
            "description": "```go\nfunc (c *FullNodeStruct) GasEstimateFeeCap(ctx context.Context, msg *types.Message, maxqueueblks int64, tsk types.TipSetKey) (types.BigInt, error) {\n\treturn c.Internal.GasEstimateFeeCap(ctx, msg, maxqueueblks, tsk)\n}\n```",
            "summary": "GasEstimateFeeCap estimates gas fee cap\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msg",
                    "description": "*types.Message",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "From": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasFeeCap": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasLimit": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "GasPremium": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Method": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Nonce": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Params": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "To": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Value": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Version": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "maxqueueblks",
                    "description": "int64",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            9
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "0",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L650"
            }
        },
        {
            "name": "Filecoin.GasEstimateGasLimit",
            "description": "```go\nfunc (c *FullNodeStruct) GasEstimateGasLimit(ctx context.Context, msg *types.Message, tsk types.TipSetKey) (int64, error) {\n\treturn c.Internal.GasEstimateGasLimit(ctx, msg, tsk)\n}\n```",
            "summary": "GasEstimateGasLimit estimates gas used by the message and returns it.\nIt fails if message fails to execute.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msg",
                    "description": "*types.Message",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "From": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasFeeCap": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasLimit": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "GasPremium": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Method": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Nonce": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Params": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "To": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Value": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Version": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "int64",
                "description": "int64",
                "summary": "",
                "schema": {
                    "title": "integer",
                    "description": "Hex representation of the integer",
                    "examples": [
                        9
                    ],
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": 9,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L658"
            }
        },
        {
            "name": "Filecoin.GasEstimateGasPremium",
            "description": "```go\nfunc (c *FullNodeStruct) GasEstimateGasPremium(ctx context.Context, nblocksincl uint64, sender address.Address, gaslimit int64, tsk types.TipSetKey) (types.BigInt, error) {\n\treturn c.Internal.GasEstimateGasPremium(ctx, nblocksincl, sender, gaslimit, tsk)\n}\n```",
            "summary": "GasEstimateGasPremium estimates what gas price should be used for a\nmessage to have high likelihood of inclusion in `nblocksincl` epochs.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "nblocksincl",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            42
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "sender",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "gaslimit",
                    "description": "int64",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            9
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "0",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L646"
            }
        },
        {
            "name": "Filecoin.GasEstimateMessageGas",
            "description": "```go\nfunc (c *FullNodeStruct) GasEstimateMessageGas(ctx context.Context, msg *types.Message, spec *api.MessageSendSpec, tsk types.TipSetKey) (*types.Message, error) {\n\treturn c.Internal.GasEstimateMessageGas(ctx, msg, spec, tsk)\n}\n```",
            "summary": "GasEstimateMessageGas estimates gas values for unset message gas fields\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msg",
                    "description": "*types.Message",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "From": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasFeeCap": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasLimit": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "GasPremium": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Method": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Nonce": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Params": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "To": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Value": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Version": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "spec",
                    "description": "*api.MessageSendSpec",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "MaxFee": {
                                "additionalProperties": false,
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.Message",
                "description": "*types.Message",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "From": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "GasFeeCap": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "GasLimit": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "GasPremium": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Method": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Nonce": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Params": {
                            "media": {
                                "binaryEncoding": "base64"
                            },
                            "type": "string"
                        },
                        "To": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Value": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Version": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Version": 42,
                            "To": "f01234",
                            "From": "f01234",
                            "Nonce": 42,
                            "Value": "0",
                            "GasLimit": 9,
                            "GasFeeCap": "0",
                            "GasPremium": "0",
                            "Method": 1,
                            "Params": "Ynl0ZSBhcnJheQ==",
                            "CID": {
                                "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                            }
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L654"
            }
        },
        {
            "name": "Filecoin.MarketReleaseFunds",
            "description": "```go\nfunc (c *FullNodeStruct) MarketReleaseFunds(ctx context.Context, addr address.Address, amt types.BigInt) error {\n\treturn c.Internal.MarketReleaseFunds(ctx, addr, amt)\n}\n```",
            "summary": "MarketReleaseFunds releases funds reserved by MarketReserveFunds\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "addr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "amt",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1146"
            }
        },
        {
            "name": "Filecoin.MarketReserveFunds",
            "description": "```go\nfunc (c *FullNodeStruct) MarketReserveFunds(ctx context.Context, wallet address.Address, addr address.Address, amt types.BigInt) (cid.Cid, error) {\n\treturn c.Internal.MarketReserveFunds(ctx, wallet, addr, amt)\n}\n```",
            "summary": "MarketReserveFunds reserves funds for a deal\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "wallet",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "addr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "amt",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1142"
            }
        },
        {
            "name": "Filecoin.MinerCreateBlock",
            "description": "```go\nfunc (c *FullNodeStruct) MinerCreateBlock(ctx context.Context, bt *api.BlockTemplate) (*types.BlockMsg, error) {\n\treturn c.Internal.MinerCreateBlock(ctx, bt)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "bt",
                    "description": "*api.BlockTemplate",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "BeaconValues": {
                                "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Round": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "Epoch": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Eproof": {
                                "additionalProperties": false,
                                "properties": {
                                    "VRFProof": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "WinCount": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Messages": {
                                "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Message": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "From": {
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                "GasFeeCap": {
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                "GasLimit": {
                                                    "pattern": "^0x[a-fA-F0-9]+$",
                                                    "title": "integer",
                                                    "type": "string"
                                                },
                                                "GasPremium": {
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                "Method": {
                                                    "pattern": "^0x[a-fA-F0-9]+$",
                                                    "title": "integer",
                                                    "type": "string"
                                                },
                                                "Nonce": {
                                                    "pattern": "^0x[a-fA-F0-9]+$",
                                                    "title": "integer",
                                                    "type": "string"
                                                },
                                                "Params": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "To": {
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                "Value": {
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                "Version": {
                                                    "pattern": "^0x[a-fA-F0-9]+$",
                                                    "title": "integer",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "Signature": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "Data": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "Type": {
                                                    "pattern": "^0x[a-fA-F0-9]+$",
                                                    "title": "integer",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "Miner": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Parents": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Ticket": {
                                "additionalProperties": false,
                                "properties": {
                                    "VRFProof": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Timestamp": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "WinningPoStProof": {
                                "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "PoStProof": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "ProofBytes": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.BlockMsg",
                "description": "*types.BlockMsg",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "BlsMessages": {
                            "items": {
                                "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                                "title": "Content Identifier",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "Header": {
                            "additionalProperties": false,
                            "properties": {
                                "BLSAggregate": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Type": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "BeaconEntries": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Data": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "Round": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "BlockSig": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Type": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "ElectionProof": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "VRFProof": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "WinCount": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "ForkSignaling": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Height": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Messages": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "Miner": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ParentBaseFee": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ParentMessageReceipts": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "ParentStateRoot": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "ParentWeight": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Parents": {
                                    "items": {
                                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "Ticket": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "VRFProof": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Timestamp": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "WinPoStProof": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "PoStProof": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "ProofBytes": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "SecpkMessages": {
                            "items": {
                                "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                                "title": "Content Identifier",
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Header": {
                                "Miner": "f01234",
                                "Ticket": {
                                    "VRFProof": "Ynl0ZSBhcnJheQ=="
                                },
                                "ElectionProof": {
                                    "WinCount": 9,
                                    "VRFProof": "Ynl0ZSBhcnJheQ=="
                                },
                                "BeaconEntries": null,
                                "WinPoStProof": null,
                                "Parents": null,
                                "ParentWeight": "0",
                                "Height": 10101,
                                "ParentStateRoot": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "ParentMessageReceipts": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "Messages": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "BLSAggregate": {
                                    "Type": 2,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                },
                                "Timestamp": 42,
                                "BlockSig": {
                                    "Type": 2,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                },
                                "ForkSignaling": 42,
                                "ParentBaseFee": "0"
                            },
                            "BlsMessages": null,
                            "SecpkMessages": null
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L714"
            }
        },
        {
            "name": "Filecoin.MinerGetBaseInfo",
            "description": "```go\nfunc (c *FullNodeStruct) MinerGetBaseInfo(ctx context.Context, maddr address.Address, epoch abi.ChainEpoch, tsk types.TipSetKey) (*api.MiningBaseInfo, error) {\n\treturn c.Internal.MinerGetBaseInfo(ctx, maddr, epoch, tsk)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "maddr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "epoch",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            10101
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.MiningBaseInfo",
                "description": "*api.MiningBaseInfo",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "BeaconEntries": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Round": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "EligibleForMining": {
                            "type": "boolean"
                        },
                        "MinerPower": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "NetworkPower": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "PrevBeaconEntry": {
                            "additionalProperties": false,
                            "properties": {
                                "Data": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "Round": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "SectorSize": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Sectors": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "SealProof": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "SealedCID": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "SectorNumber": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "WorkerKey": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "MinerPower": "0",
                            "NetworkPower": "0",
                            "Sectors": null,
                            "WorkerKey": "f01234",
                            "SectorSize": 34359738368,
                            "PrevBeaconEntry": {
                                "Round": 42,
                                "Data": "Ynl0ZSBhcnJheQ=="
                            },
                            "BeaconEntries": null,
                            "EligibleForMining": true
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L710"
            }
        },
        {
            "name": "Filecoin.MpoolBatchPush",
            "description": "```go\nfunc (c *FullNodeStruct) MpoolBatchPush(ctx context.Context, smsgs []*types.SignedMessage) ([]cid.Cid, error) {\n\treturn c.Internal.MpoolBatchPush(ctx, smsgs)\n}\n```",
            "summary": "MpoolBatchPush batch pushes a signed message to mempool.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "smsgs",
                    "description": "[]*types.SignedMessage",
                    "summary": "",
                    "schema": {
                        "items": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "Message": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "From": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasFeeCap": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasLimit": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "GasPremium": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Method": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "Nonce": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "Params": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "To": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Value": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Version": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Signature": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Data": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "Type": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]cid.Cid",
                "description": "[]cid.Cid",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "title": "Content Identifier",
                            "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                            "type": [
                                "string"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L694"
            }
        },
        {
            "name": "Filecoin.MpoolBatchPushMessage",
            "description": "```go\nfunc (c *FullNodeStruct) MpoolBatchPushMessage(ctx context.Context, msgs []*types.Message, spec *api.MessageSendSpec) ([]*types.SignedMessage, error) {\n\treturn c.Internal.MpoolBatchPushMessage(ctx, msgs, spec)\n}\n```",
            "summary": "MpoolBatchPushMessage batch pushes a unsigned message to mempool.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msgs",
                    "description": "[]*types.Message",
                    "summary": "",
                    "schema": {
                        "items": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "From": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasFeeCap": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasLimit": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "GasPremium": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Method": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Nonce": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Params": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "To": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Value": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Version": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "spec",
                    "description": "*api.MessageSendSpec",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "MaxFee": {
                                "additionalProperties": false,
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*types.SignedMessage",
                "description": "[]*types.SignedMessage",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Message": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "From": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasFeeCap": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasLimit": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "GasPremium": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Method": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "Nonce": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "Params": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "To": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Value": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Version": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Signature": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Type": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L702"
            }
        },
        {
            "name": "Filecoin.MpoolBatchPushUntrusted",
            "description": "```go\nfunc (c *FullNodeStruct) MpoolBatchPushUntrusted(ctx context.Context, smsgs []*types.SignedMessage) ([]cid.Cid, error) {\n\treturn c.Internal.MpoolBatchPushUntrusted(ctx, smsgs)\n}\n```",
            "summary": "MpoolBatchPushUntrusted batch pushes a signed message to mempool from untrusted sources.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "smsgs",
                    "description": "[]*types.SignedMessage",
                    "summary": "",
                    "schema": {
                        "items": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "Message": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "From": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasFeeCap": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasLimit": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "GasPremium": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Method": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "Nonce": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "Params": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "To": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Value": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Version": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Signature": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Data": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "Type": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]cid.Cid",
                "description": "[]cid.Cid",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "title": "Content Identifier",
                            "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                            "type": [
                                "string"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L698"
            }
        },
        {
            "name": "Filecoin.MpoolClear",
            "description": "```go\nfunc (c *FullNodeStruct) MpoolClear(ctx context.Context, local bool) error {\n\treturn c.Internal.MpoolClear(ctx, local)\n}\n```",
            "summary": "MpoolClear clears pending messages from the mpool\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "local",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L678"
            }
        },
        {
            "name": "Filecoin.MpoolGetConfig",
            "description": "```go\nfunc (c *FullNodeStruct) MpoolGetConfig(ctx context.Context) (*types.MpoolConfig, error) {\n\treturn c.Internal.MpoolGetConfig(ctx)\n}\n```",
            "summary": "MpoolGetConfig returns (a copy of) the current mpool config\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "*types.MpoolConfig",
                "description": "*types.MpoolConfig",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "GasLimitOverestimation": {
                            "type": "number"
                        },
                        "PriorityAddrs": {
                            "items": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "PruneCooldown": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "ReplaceByFeeRatio": {
                            "type": "number"
                        },
                        "SizeLimitHigh": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "SizeLimitLow": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "PriorityAddrs": null,
                            "SizeLimitHigh": 123,
                            "SizeLimitLow": 123,
                            "ReplaceByFeeRatio": 12.3,
                            "PruneCooldown": 60000000000,
                            "GasLimitOverestimation": 12.3
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L662"
            }
        },
        {
            "name": "Filecoin.MpoolGetNonce",
            "description": "```go\nfunc (c *FullNodeStruct) MpoolGetNonce(ctx context.Context, addr address.Address) (uint64, error) {\n\treturn c.Internal.MpoolGetNonce(ctx, addr)\n}\n```",
            "summary": "MpoolGetNonce gets next nonce for the specified sender.\nNote that this method may not be atomic. Use MpoolPushMessage instead.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "addr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "uint64",
                "description": "uint64",
                "summary": "",
                "schema": {
                    "title": "integer",
                    "description": "Hex representation of the integer",
                    "examples": [
                        42
                    ],
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": 42,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L786"
            }
        },
        {
            "name": "Filecoin.MpoolPending",
            "description": "```go\nfunc (c *FullNodeStruct) MpoolPending(ctx context.Context, tsk types.TipSetKey) ([]*types.SignedMessage, error) {\n\treturn c.Internal.MpoolPending(ctx, tsk)\n}\n```",
            "summary": "MpoolPending returns pending mempool messages.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*types.SignedMessage",
                "description": "[]*types.SignedMessage",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Message": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "From": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasFeeCap": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasLimit": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "GasPremium": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Method": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "Nonce": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "Params": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "To": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Value": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Version": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Signature": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Type": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L674"
            }
        },
        {
            "name": "Filecoin.MpoolPush",
            "description": "```go\nfunc (c *FullNodeStruct) MpoolPush(ctx context.Context, smsg *types.SignedMessage) (cid.Cid, error) {\n\treturn c.Internal.MpoolPush(ctx, smsg)\n}\n```",
            "summary": "MpoolPush pushes a signed message to mempool.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "smsg",
                    "description": "*types.SignedMessage",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "additionalProperties": false,
                                "properties": {
                                    "From": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasFeeCap": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasLimit": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "GasPremium": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Method": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Nonce": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Params": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "To": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Value": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Version": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Signature": {
                                "additionalProperties": false,
                                "properties": {
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Type": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L682"
            }
        },
        {
            "name": "Filecoin.MpoolPushMessage",
            "description": "```go\nfunc (c *FullNodeStruct) MpoolPushMessage(ctx context.Context, msg *types.Message, spec *api.MessageSendSpec) (*types.SignedMessage, error) {\n\treturn c.Internal.MpoolPushMessage(ctx, msg, spec)\n}\n```",
            "summary": "MpoolPushMessage atomically assigns a nonce, signs, and pushes a message\nto mempool.\nmaxFee is only used when GasFeeCap/GasPremium fields aren't specified\n\nWhen maxFee is set to 0, MpoolPushMessage will guess appropriate fee\nbased on current chain conditions\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msg",
                    "description": "*types.Message",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "From": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasFeeCap": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasLimit": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "GasPremium": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Method": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Nonce": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Params": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "To": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Value": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Version": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "spec",
                    "description": "*api.MessageSendSpec",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "MaxFee": {
                                "additionalProperties": false,
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.SignedMessage",
                "description": "*types.SignedMessage",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Message": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Nonce": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "Signature": {
                            "additionalProperties": false,
                            "properties": {
                                "Data": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "Type": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Message": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "Signature": {
                                "Type": 2,
                                "Data": "Ynl0ZSBhcnJheQ=="
                            },
                            "CID": {
                                "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                            }
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L690"
            }
        },
        {
            "name": "Filecoin.MpoolPushUntrusted",
            "description": "```go\nfunc (c *FullNodeStruct) MpoolPushUntrusted(ctx context.Context, smsg *types.SignedMessage) (cid.Cid, error) {\n\treturn c.Internal.MpoolPushUntrusted(ctx, smsg)\n}\n```",
            "summary": "MpoolPushUntrusted pushes a signed message to mempool from untrusted sources.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "smsg",
                    "description": "*types.SignedMessage",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "Message": {
                                "additionalProperties": false,
                                "properties": {
                                    "From": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasFeeCap": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasLimit": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "GasPremium": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Method": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Nonce": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Params": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "To": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Value": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Version": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Signature": {
                                "additionalProperties": false,
                                "properties": {
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Type": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L686"
            }
        },
        {
            "name": "Filecoin.MpoolSelect",
            "description": "```go\nfunc (c *FullNodeStruct) MpoolSelect(ctx context.Context, tsk types.TipSetKey, tq float64) ([]*types.SignedMessage, error) {\n\treturn c.Internal.MpoolSelect(ctx, tsk, tq)\n}\n```",
            "summary": "MpoolSelect returns a list of pending messages for inclusion in the next block\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tq",
                    "description": "float64",
                    "summary": "",
                    "schema": {
                        "examples": [
                            12.3
                        ],
                        "type": [
                            "number"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*types.SignedMessage",
                "description": "[]*types.SignedMessage",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Message": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "From": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasFeeCap": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasLimit": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "GasPremium": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Method": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "Nonce": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "Params": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "To": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Value": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Version": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Signature": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Type": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L670"
            }
        },
        {
            "name": "Filecoin.MpoolSetConfig",
            "description": "```go\nfunc (c *FullNodeStruct) MpoolSetConfig(ctx context.Context, cfg *types.MpoolConfig) error {\n\treturn c.Internal.MpoolSetConfig(ctx, cfg)\n}\n```",
            "summary": "MpoolSetConfig sets the mpool config to (a copy of) the supplied config\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "cfg",
                    "description": "*types.MpoolConfig",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "GasLimitOverestimation": {
                                "type": "number"
                            },
                            "PriorityAddrs": {
                                "items": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "PruneCooldown": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "ReplaceByFeeRatio": {
                                "type": "number"
                            },
                            "SizeLimitHigh": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "SizeLimitLow": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L666"
            }
        },
        {
            "name": "Filecoin.MsigAddApprove",
            "description": "```go\nfunc (c *FullNodeStruct) MsigAddApprove(ctx context.Context, msig address.Address, src address.Address, txID uint64, proposer address.Address, newAdd address.Address, inc bool) (cid.Cid, error) {\n\treturn c.Internal.MsigAddApprove(ctx, msig, src, txID, proposer, newAdd, inc)\n}\n```",
            "summary": "MsigAddApprove approves a previously proposed AddSigner message\nIt takes the following params: \u003cmultisig address\u003e, \u003csender address of the approve msg\u003e, \u003cproposed message ID\u003e,\n\u003cproposer address\u003e, \u003cnew signer\u003e, \u003cwhether the number of required signers should be increased\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msig",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "src",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "txID",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            42
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "proposer",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "newAdd",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "inc",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1118"
            }
        },
        {
            "name": "Filecoin.MsigAddCancel",
            "description": "```go\nfunc (c *FullNodeStruct) MsigAddCancel(ctx context.Context, msig address.Address, src address.Address, txID uint64, newAdd address.Address, inc bool) (cid.Cid, error) {\n\treturn c.Internal.MsigAddCancel(ctx, msig, src, txID, newAdd, inc)\n}\n```",
            "summary": "MsigAddCancel cancels a previously proposed AddSigner message\nIt takes the following params: \u003cmultisig address\u003e, \u003csender address of the cancel msg\u003e, \u003cproposed message ID\u003e,\n\u003cnew signer\u003e, \u003cwhether the number of required signers should be increased\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msig",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "src",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "txID",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            42
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "newAdd",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "inc",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1122"
            }
        },
        {
            "name": "Filecoin.MsigAddPropose",
            "description": "```go\nfunc (c *FullNodeStruct) MsigAddPropose(ctx context.Context, msig address.Address, src address.Address, newAdd address.Address, inc bool) (cid.Cid, error) {\n\treturn c.Internal.MsigAddPropose(ctx, msig, src, newAdd, inc)\n}\n```",
            "summary": "MsigAddPropose proposes adding a signer in the multisig\nIt takes the following params: \u003cmultisig address\u003e, \u003csender address of the propose msg\u003e,\n\u003cnew signer\u003e, \u003cwhether the number of required signers should be increased\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msig",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "src",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "newAdd",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "inc",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1114"
            }
        },
        {
            "name": "Filecoin.MsigApprove",
            "description": "```go\nfunc (c *FullNodeStruct) MsigApprove(ctx context.Context, msig address.Address, txID uint64, signer address.Address) (cid.Cid, error) {\n\treturn c.Internal.MsigApprove(ctx, msig, txID, signer)\n}\n```",
            "summary": "MsigApprove approves a previously-proposed multisig message by transaction ID\nIt takes the following params: \u003cmultisig address\u003e, \u003cproposed transaction ID\u003e \u003csigner address\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msig",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "txID",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            42
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "signer",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1102"
            }
        },
        {
            "name": "Filecoin.MsigApproveTxnHash",
            "description": "```go\nfunc (c *FullNodeStruct) MsigApproveTxnHash(ctx context.Context, msig address.Address, txID uint64, proposer address.Address, to address.Address, amt types.BigInt, src address.Address, method uint64, params []byte) (cid.Cid, error) {\n\treturn c.Internal.MsigApproveTxnHash(ctx, msig, txID, proposer, to, amt, src, method, params)\n}\n```",
            "summary": "MsigApproveTxnHash approves a previously-proposed multisig message, specified\nusing both transaction ID and a hash of the parameters used in the\nproposal. This method of approval can be used to ensure you only approve\nexactly the transaction you think you are.\nIt takes the following params: \u003cmultisig address\u003e, \u003cproposed message ID\u003e, \u003cproposer address\u003e, \u003crecipient address\u003e, \u003cvalue to transfer\u003e,\n\u003csender address of the approve msg\u003e, \u003cmethod to call in the proposed message\u003e, \u003cparams to include in the proposed message\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msig",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "txID",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            42
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "proposer",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "to",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "amt",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "src",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "method",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            42
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "params",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1106"
            }
        },
        {
            "name": "Filecoin.MsigCancel",
            "description": "```go\nfunc (c *FullNodeStruct) MsigCancel(ctx context.Context, msig address.Address, txID uint64, to address.Address, amt types.BigInt, src address.Address, method uint64, params []byte) (cid.Cid, error) {\n\treturn c.Internal.MsigCancel(ctx, msig, txID, to, amt, src, method, params)\n}\n```",
            "summary": "MsigCancel cancels a previously-proposed multisig message\nIt takes the following params: \u003cmultisig address\u003e, \u003cproposed transaction ID\u003e, \u003crecipient address\u003e, \u003cvalue to transfer\u003e,\n\u003csender address of the cancel msg\u003e, \u003cmethod to call in the proposed message\u003e, \u003cparams to include in the proposed message\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msig",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "txID",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            42
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "to",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "amt",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "src",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "method",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            42
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "params",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1110"
            }
        },
        {
            "name": "Filecoin.MsigCreate",
            "description": "```go\nfunc (c *FullNodeStruct) MsigCreate(ctx context.Context, req uint64, addrs []address.Address, duration abi.ChainEpoch, val types.BigInt, src address.Address, gp types.BigInt) (cid.Cid, error) {\n\treturn c.Internal.MsigCreate(ctx, req, addrs, duration, val, src, gp)\n}\n```",
            "summary": "MsigCreate creates a multisig wallet\nIt takes the following params: \u003crequired number of senders\u003e, \u003capproving addresses\u003e, \u003cunlock duration\u003e\n\u003cinitial balance\u003e, \u003csender address of the create msg\u003e, \u003cgas price\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "req",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            42
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "addrs",
                    "description": "[]address.Address",
                    "summary": "",
                    "schema": {
                        "items": [
                            {
                                "additionalProperties": false,
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "duration",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            10101
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "val",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "src",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "gp",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1094"
            }
        },
        {
            "name": "Filecoin.MsigGetAvailableBalance",
            "description": "```go\nfunc (c *FullNodeStruct) MsigGetAvailableBalance(ctx context.Context, a address.Address, tsk types.TipSetKey) (types.BigInt, error) {\n\treturn c.Internal.MsigGetAvailableBalance(ctx, a, tsk)\n}\n```",
            "summary": "MsigGetAvailableBalance returns the portion of a multisig's balance that can be withdrawn or spent\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "a",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "0",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1082"
            }
        },
        {
            "name": "Filecoin.MsigGetVested",
            "description": "```go\nfunc (c *FullNodeStruct) MsigGetVested(ctx context.Context, a address.Address, sTsk types.TipSetKey, eTsk types.TipSetKey) (types.BigInt, error) {\n\treturn c.Internal.MsigGetVested(ctx, a, sTsk, eTsk)\n}\n```",
            "summary": "MsigGetVested returns the amount of FIL that vested in a multisig in a certain period.\nIt takes the following params: \u003cmultisig address\u003e, \u003cstart epoch\u003e, \u003cend epoch\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "a",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "sTsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "eTsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "0",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1090"
            }
        },
        {
            "name": "Filecoin.MsigGetVestingSchedule",
            "description": "```go\nfunc (c *FullNodeStruct) MsigGetVestingSchedule(ctx context.Context, a address.Address, tsk types.TipSetKey) (api.MsigVesting, error) {\n\treturn c.Internal.MsigGetVestingSchedule(ctx, a, tsk)\n}\n```",
            "summary": "MsigGetVestingSchedule returns the vesting details of a given multisig.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "a",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "api.MsigVesting",
                "description": "api.MsigVesting",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "InitialBalance": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "StartEpoch": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "UnlockDuration": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "InitialBalance": "0",
                            "StartEpoch": 10101,
                            "UnlockDuration": 10101
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1086"
            }
        },
        {
            "name": "Filecoin.MsigPropose",
            "description": "```go\nfunc (c *FullNodeStruct) MsigPropose(ctx context.Context, msig address.Address, to address.Address, amt types.BigInt, src address.Address, method uint64, params []byte) (cid.Cid, error) {\n\treturn c.Internal.MsigPropose(ctx, msig, to, amt, src, method, params)\n}\n```",
            "summary": "MsigPropose proposes a multisig message\nIt takes the following params: \u003cmultisig address\u003e, \u003crecipient address\u003e, \u003cvalue to transfer\u003e,\n\u003csender address of the propose msg\u003e, \u003cmethod to call in the proposed message\u003e, \u003cparams to include in the proposed message\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msig",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "to",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "amt",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "src",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "method",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            42
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "params",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1098"
            }
        },
        {
            "name": "Filecoin.MsigRemoveSigner",
            "description": "```go\nfunc (c *FullNodeStruct) MsigRemoveSigner(ctx context.Context, msig address.Address, proposer address.Address, toRemove address.Address, decrease bool) (cid.Cid, error) {\n\treturn c.Internal.MsigRemoveSigner(ctx, msig, proposer, toRemove, decrease)\n}\n```",
            "summary": "MsigRemoveSigner proposes the removal of a signer from the multisig.\nIt accepts the multisig to make the change on, the proposer address to\nsend the message from, the address to be removed, and a boolean\nindicating whether or not the signing threshold should be lowered by one\nalong with the address removal.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msig",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "proposer",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "toRemove",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "decrease",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1138"
            }
        },
        {
            "name": "Filecoin.MsigSwapApprove",
            "description": "```go\nfunc (c *FullNodeStruct) MsigSwapApprove(ctx context.Context, msig address.Address, src address.Address, txID uint64, proposer address.Address, oldAdd address.Address, newAdd address.Address) (cid.Cid, error) {\n\treturn c.Internal.MsigSwapApprove(ctx, msig, src, txID, proposer, oldAdd, newAdd)\n}\n```",
            "summary": "MsigSwapApprove approves a previously proposed SwapSigner\nIt takes the following params: \u003cmultisig address\u003e, \u003csender address of the approve msg\u003e, \u003cproposed message ID\u003e,\n\u003cproposer address\u003e, \u003cold signer\u003e, \u003cnew signer\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msig",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "src",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "txID",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            42
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "proposer",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "oldAdd",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "newAdd",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1130"
            }
        },
        {
            "name": "Filecoin.MsigSwapCancel",
            "description": "```go\nfunc (c *FullNodeStruct) MsigSwapCancel(ctx context.Context, msig address.Address, src address.Address, txID uint64, oldAdd address.Address, newAdd address.Address) (cid.Cid, error) {\n\treturn c.Internal.MsigSwapCancel(ctx, msig, src, txID, oldAdd, newAdd)\n}\n```",
            "summary": "MsigSwapCancel cancels a previously proposed SwapSigner message\nIt takes the following params: \u003cmultisig address\u003e, \u003csender address of the cancel msg\u003e, \u003cproposed message ID\u003e,\n\u003cold signer\u003e, \u003cnew signer\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msig",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "src",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "txID",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            42
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "oldAdd",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "newAdd",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1134"
            }
        },
        {
            "name": "Filecoin.MsigSwapPropose",
            "description": "```go\nfunc (c *FullNodeStruct) MsigSwapPropose(ctx context.Context, msig address.Address, src address.Address, oldAdd address.Address, newAdd address.Address) (cid.Cid, error) {\n\treturn c.Internal.MsigSwapPropose(ctx, msig, src, oldAdd, newAdd)\n}\n```",
            "summary": "MsigSwapPropose proposes swapping 2 signers in the multisig\nIt takes the following params: \u003cmultisig address\u003e, \u003csender address of the propose msg\u003e,\n\u003cold signer\u003e, \u003cnew signer\u003e\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msig",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "src",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "oldAdd",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "newAdd",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1126"
            }
        },
        {
            "name": "Filecoin.PaychAllocateLane",
            "description": "```go\nfunc (c *FullNodeStruct) PaychAllocateLane(ctx context.Context, ch address.Address) (uint64, error) {\n\treturn c.Internal.PaychAllocateLane(ctx, ch)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "ch",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "uint64",
                "description": "uint64",
                "summary": "",
                "schema": {
                    "title": "integer",
                    "description": "Hex representation of the integer",
                    "examples": [
                        42
                    ],
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": 42,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1202"
            }
        },
        {
            "name": "Filecoin.PaychAvailableFunds",
            "description": "```go\nfunc (c *FullNodeStruct) PaychAvailableFunds(ctx context.Context, ch address.Address) (*api.ChannelAvailableFunds, error) {\n\treturn c.Internal.PaychAvailableFunds(ctx, ch)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "ch",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.ChannelAvailableFunds",
                "description": "*api.ChannelAvailableFunds",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Channel": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "ConfirmedAmt": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "From": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "PendingAmt": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "PendingWaitSentinel": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "QueuedAmt": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "To": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "VoucherReedeemedAmt": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Channel": "\u003cempty\u003e",
                            "From": "f01234",
                            "To": "f01234",
                            "ConfirmedAmt": "0",
                            "PendingAmt": "0",
                            "PendingWaitSentinel": null,
                            "QueuedAmt": "0",
                            "VoucherReedeemedAmt": "0"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1158"
            }
        },
        {
            "name": "Filecoin.PaychAvailableFundsByFromTo",
            "description": "```go\nfunc (c *FullNodeStruct) PaychAvailableFundsByFromTo(ctx context.Context, from, to address.Address) (*api.ChannelAvailableFunds, error) {\n\treturn c.Internal.PaychAvailableFundsByFromTo(ctx, from, to)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "from",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "to",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.ChannelAvailableFunds",
                "description": "*api.ChannelAvailableFunds",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Channel": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "ConfirmedAmt": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "From": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "PendingAmt": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "PendingWaitSentinel": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "QueuedAmt": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "To": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "VoucherReedeemedAmt": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Channel": "\u003cempty\u003e",
                            "From": "f01234",
                            "To": "f01234",
                            "ConfirmedAmt": "0",
                            "PendingAmt": "0",
                            "PendingWaitSentinel": null,
                            "QueuedAmt": "0",
                            "VoucherReedeemedAmt": "0"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1162"
            }
        },
        {
            "name": "Filecoin.PaychCollect",
            "description": "```go\nfunc (c *FullNodeStruct) PaychCollect(ctx context.Context, a address.Address) (cid.Cid, error) {\n\treturn c.Internal.PaychCollect(ctx, a)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "a",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1198"
            }
        },
        {
            "name": "Filecoin.PaychGet",
            "description": "```go\nfunc (c *FullNodeStruct) PaychGet(ctx context.Context, from, to address.Address, amt types.BigInt) (*api.ChannelInfo, error) {\n\treturn c.Internal.PaychGet(ctx, from, to, amt)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "from",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "to",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "amt",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.ChannelInfo",
                "description": "*api.ChannelInfo",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Channel": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "WaitSentinel": {
                            "title": "Content Identifier",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Channel": "f01234",
                            "WaitSentinel": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1150"
            }
        },
        {
            "name": "Filecoin.PaychGetWaitReady",
            "description": "```go\nfunc (c *FullNodeStruct) PaychGetWaitReady(ctx context.Context, sentinel cid.Cid) (address.Address, error) {\n\treturn c.Internal.PaychGetWaitReady(ctx, sentinel)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "sentinel",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "address.Address",
                "description": "address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "f01234",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1154"
            }
        },
        {
            "name": "Filecoin.PaychList",
            "description": "```go\nfunc (c *FullNodeStruct) PaychList(ctx context.Context) ([]address.Address, error) {\n\treturn c.Internal.PaychList(ctx)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "[]address.Address",
                "description": "[]address.Address",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1166"
            }
        },
        {
            "name": "Filecoin.PaychNewPayment",
            "description": "```go\nfunc (c *FullNodeStruct) PaychNewPayment(ctx context.Context, from, to address.Address, vouchers []api.VoucherSpec) (*api.PaymentInfo, error) {\n\treturn c.Internal.PaychNewPayment(ctx, from, to, vouchers)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "from",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "to",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "vouchers",
                    "description": "[]api.VoucherSpec",
                    "summary": "",
                    "schema": {
                        "items": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "Amount": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Extra": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Actor": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Data": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "Method": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "MinSettle": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "TimeLockMax": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "TimeLockMin": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.PaymentInfo",
                "description": "*api.PaymentInfo",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Channel": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Vouchers": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "Amount": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "ChannelAddr": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Extra": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Actor": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Data": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "Method": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Lane": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Merges": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "Lane": {
                                                    "pattern": "^0x[a-fA-F0-9]+$",
                                                    "title": "integer",
                                                    "type": "string"
                                                },
                                                "Nonce": {
                                                    "pattern": "^0x[a-fA-F0-9]+$",
                                                    "title": "integer",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "MinSettleHeight": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Nonce": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "SecretPreimage": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Signature": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Data": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "Type": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "TimeLockMax": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "TimeLockMin": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "WaitSentinel": {
                            "title": "Content Identifier",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Channel": "f01234",
                            "WaitSentinel": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Vouchers": null
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1206"
            }
        },
        {
            "name": "Filecoin.PaychSettle",
            "description": "```go\nfunc (c *FullNodeStruct) PaychSettle(ctx context.Context, a address.Address) (cid.Cid, error) {\n\treturn c.Internal.PaychSettle(ctx, a)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "a",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1194"
            }
        },
        {
            "name": "Filecoin.PaychStatus",
            "description": "```go\nfunc (c *FullNodeStruct) PaychStatus(ctx context.Context, pch address.Address) (*api.PaychStatus, error) {\n\treturn c.Internal.PaychStatus(ctx, pch)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "pch",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.PaychStatus",
                "description": "*api.PaychStatus",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "ControlAddr": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Direction": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "ControlAddr": "f01234",
                            "Direction": 1
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1170"
            }
        },
        {
            "name": "Filecoin.PaychVoucherAdd",
            "description": "```go\nfunc (c *FullNodeStruct) PaychVoucherAdd(ctx context.Context, addr address.Address, sv *paych.SignedVoucher, proof []byte, minDelta types.BigInt) (types.BigInt, error) {\n\treturn c.Internal.PaychVoucherAdd(ctx, addr, sv, proof, minDelta)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "addr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "sv",
                    "description": "*paych.SignedVoucher",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "Amount": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "ChannelAddr": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Extra": {
                                "additionalProperties": false,
                                "properties": {
                                    "Actor": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Method": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Lane": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Merges": {
                                "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Lane": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "Nonce": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "MinSettleHeight": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Nonce": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "SecretPreimage": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "Signature": {
                                "additionalProperties": false,
                                "properties": {
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Type": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "TimeLockMax": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "TimeLockMin": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "proof",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "minDelta",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "0",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1182"
            }
        },
        {
            "name": "Filecoin.PaychVoucherCheckSpendable",
            "description": "```go\nfunc (c *FullNodeStruct) PaychVoucherCheckSpendable(ctx context.Context, addr address.Address, sv *paych.SignedVoucher, secret []byte, proof []byte) (bool, error) {\n\treturn c.Internal.PaychVoucherCheckSpendable(ctx, addr, sv, secret, proof)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "addr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "sv",
                    "description": "*paych.SignedVoucher",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "Amount": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "ChannelAddr": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Extra": {
                                "additionalProperties": false,
                                "properties": {
                                    "Actor": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Method": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Lane": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Merges": {
                                "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Lane": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "Nonce": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "MinSettleHeight": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Nonce": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "SecretPreimage": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "Signature": {
                                "additionalProperties": false,
                                "properties": {
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Type": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "TimeLockMax": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "TimeLockMin": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "secret",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "proof",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": true,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1178"
            }
        },
        {
            "name": "Filecoin.PaychVoucherCheckValid",
            "description": "```go\nfunc (c *FullNodeStruct) PaychVoucherCheckValid(ctx context.Context, addr address.Address, sv *paych.SignedVoucher) error {\n\treturn c.Internal.PaychVoucherCheckValid(ctx, addr, sv)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "addr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "sv",
                    "description": "*paych.SignedVoucher",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "Amount": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "ChannelAddr": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Extra": {
                                "additionalProperties": false,
                                "properties": {
                                    "Actor": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Method": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Lane": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Merges": {
                                "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Lane": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "Nonce": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "MinSettleHeight": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Nonce": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "SecretPreimage": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "Signature": {
                                "additionalProperties": false,
                                "properties": {
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Type": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "TimeLockMax": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "TimeLockMin": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1174"
            }
        },
        {
            "name": "Filecoin.PaychVoucherCreate",
            "description": "```go\nfunc (c *FullNodeStruct) PaychVoucherCreate(ctx context.Context, pch address.Address, amt types.BigInt, lane uint64) (*api.VoucherCreateResult, error) {\n\treturn c.Internal.PaychVoucherCreate(ctx, pch, amt, lane)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "pch",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "amt",
                    "description": "types.BigInt",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "0"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "lane",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            42
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.VoucherCreateResult",
                "description": "*api.VoucherCreateResult",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Shortfall": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Voucher": {
                            "additionalProperties": false,
                            "properties": {
                                "Amount": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ChannelAddr": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Extra": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Actor": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Method": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Lane": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Merges": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Lane": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "Nonce": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "MinSettleHeight": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Nonce": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "SecretPreimage": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "Signature": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Type": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "TimeLockMax": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "TimeLockMin": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Voucher": {
                                "ChannelAddr": "f01234",
                                "TimeLockMin": 10101,
                                "TimeLockMax": 10101,
                                "SecretPreimage": "Ynl0ZSBhcnJheQ==",
                                "Extra": {
                                    "Actor": "f01234",
                                    "Method": 1,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                },
                                "Lane": 42,
                                "Nonce": 42,
                                "Amount": "0",
                                "MinSettleHeight": 10101,
                                "Merges": null,
                                "Signature": {
                                    "Type": 2,
                                    "Data": "Ynl0ZSBhcnJheQ=="
                                }
                            },
                            "Shortfall": "0"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1186"
            }
        },
        {
            "name": "Filecoin.PaychVoucherList",
            "description": "```go\nfunc (c *FullNodeStruct) PaychVoucherList(ctx context.Context, pch address.Address) ([]*paych.SignedVoucher, error) {\n\treturn c.Internal.PaychVoucherList(ctx, pch)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "pch",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*paych.SignedVoucher",
                "description": "[]*paych.SignedVoucher",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Amount": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ChannelAddr": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Extra": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Actor": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Method": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Lane": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Merges": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Lane": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "Nonce": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "MinSettleHeight": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Nonce": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "SecretPreimage": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "Signature": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Data": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "Type": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "TimeLockMax": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "TimeLockMin": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1190"
            }
        },
        {
            "name": "Filecoin.PaychVoucherSubmit",
            "description": "```go\nfunc (c *FullNodeStruct) PaychVoucherSubmit(ctx context.Context, ch address.Address, sv *paych.SignedVoucher, secret []byte, proof []byte) (cid.Cid, error) {\n\treturn c.Internal.PaychVoucherSubmit(ctx, ch, sv, secret, proof)\n}\n```",
            "summary": "There are not yet any comments for this method.",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "ch",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "sv",
                    "description": "*paych.SignedVoucher",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "Amount": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "ChannelAddr": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Extra": {
                                "additionalProperties": false,
                                "properties": {
                                    "Actor": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Method": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "Lane": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Merges": {
                                "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Lane": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "Nonce": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "MinSettleHeight": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Nonce": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "SecretPreimage": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "Signature": {
                                "additionalProperties": false,
                                "properties": {
                                    "Data": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "Type": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "TimeLockMax": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "TimeLockMin": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "secret",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "proof",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "cid.Cid",
                "description": "cid.Cid",
                "summary": "",
                "schema": {
                    "title": "Content Identifier",
                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                    "examples": [
                        {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        }
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1210"
            }
        },
        {
            "name": "Filecoin.StateAccountKey",
            "description": "```go\nfunc (c *FullNodeStruct) StateAccountKey(ctx context.Context, addr address.Address, tsk types.TipSetKey) (address.Address, error) {\n\treturn c.Internal.StateAccountKey(ctx, addr, tsk)\n}\n```",
            "summary": "StateAccountKey returns the public key address of the given ID address\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "addr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "address.Address",
                "description": "address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "f01234",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1030"
            }
        },
        {
            "name": "Filecoin.StateAllMinerFaults",
            "description": "```go\nfunc (c *FullNodeStruct) StateAllMinerFaults(ctx context.Context, cutoff abi.ChainEpoch, endTsk types.TipSetKey) ([]*api.Fault, error) {\n\treturn c.Internal.StateAllMinerFaults(ctx, cutoff, endTsk)\n}\n```",
            "summary": "StateAllMinerFaults returns all non-expired Faults that occur within lookback epochs of the given tipset\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "cutoff",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            10101
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "endTsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*api.Fault",
                "description": "[]*api.Fault",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Epoch": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Miner": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L934"
            }
        },
        {
            "name": "Filecoin.StateCall",
            "description": "```go\nfunc (c *FullNodeStruct) StateCall(ctx context.Context, msg *types.Message, tsk types.TipSetKey) (*api.InvocResult, error) {\n\treturn c.Internal.StateCall(ctx, msg, tsk)\n}\n```",
            "summary": "StateCall runs the given message and returns its result without any persisted changes.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msg",
                    "description": "*types.Message",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "From": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasFeeCap": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasLimit": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "GasPremium": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Method": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Nonce": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Params": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "To": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Value": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Version": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.InvocResult",
                "description": "*api.InvocResult",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Duration": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Error": {
                            "type": "string"
                        },
                        "ExecutionTrace": {
                            "additionalProperties": false,
                            "properties": {
                                "Duration": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Error": {
                                    "type": "string"
                                },
                                "GasCharges": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Name": {
                                                "type": "string"
                                            },
                                            "cg": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "ex": {
                                                "additionalProperties": true,
                                                "type": "object"
                                            },
                                            "loc": {
                                                "items": {
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "File": {
                                                            "type": "string"
                                                        },
                                                        "Function": {
                                                            "type": "string"
                                                        },
                                                        "Line": {
                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                            "title": "integer",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "sg": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "tg": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "tt": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "vcg": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "vsg": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "vtg": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "Msg": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "From": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasFeeCap": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasLimit": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "GasPremium": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Method": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "Nonce": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "Params": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "To": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Value": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Version": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "MsgRct": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "ExitCode": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "GasUsed": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "Return": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Subcalls": {
                                    "items": {},
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "GasCost": {
                            "additionalProperties": false,
                            "properties": {
                                "BaseFeeBurn": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasUsed": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Message": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "MinerPenalty": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "MinerTip": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "OverEstimationBurn": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Refund": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "TotalCost": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "Msg": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Nonce": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "MsgCid": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "MsgRct": {
                            "additionalProperties": false,
                            "properties": {
                                "ExitCode": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "GasUsed": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Return": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "MsgCid": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Msg": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "MsgRct": {
                                "ExitCode": 0,
                                "Return": "Ynl0ZSBhcnJheQ==",
                                "GasUsed": 9
                            },
                            "GasCost": {
                                "Message": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "GasUsed": "0",
                                "BaseFeeBurn": "0",
                                "OverEstimationBurn": "0",
                                "MinerPenalty": "0",
                                "MinerTip": "0",
                                "Refund": "0",
                                "TotalCost": "0"
                            },
                            "ExecutionTrace": {
                                "Msg": {
                                    "Version": 42,
                                    "To": "f01234",
                                    "From": "f01234",
                                    "Nonce": 42,
                                    "Value": "0",
                                    "GasLimit": 9,
                                    "GasFeeCap": "0",
                                    "GasPremium": "0",
                                    "Method": 1,
                                    "Params": "Ynl0ZSBhcnJheQ==",
                                    "CID": {
                                        "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                    }
                                },
                                "MsgRct": {
                                    "ExitCode": 0,
                                    "Return": "Ynl0ZSBhcnJheQ==",
                                    "GasUsed": 9
                                },
                                "Error": "string value",
                                "Duration": 60000000000,
                                "GasCharges": null,
                                "Subcalls": null
                            },
                            "Error": "string value",
                            "Duration": 60000000000
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L974"
            }
        },
        {
            "name": "Filecoin.StateChangedActors",
            "description": "```go\nfunc (c *FullNodeStruct) StateChangedActors(ctx context.Context, olnstate cid.Cid, newstate cid.Cid) (map[string]types.Actor, error) {\n\treturn c.Internal.StateChangedActors(ctx, olnstate, newstate)\n}\n```",
            "summary": "StateChangedActors returns all the actors whose states change between the two given state CIDs\nTODO: Should this take tipset keys instead?\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "olnstate",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "newstate",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "map[string]types.Actor",
                "description": "map[string]types.Actor",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "t01236": {
                                "Code": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "Head": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "Nonce": 42,
                                "Balance": "0"
                            }
                        }
                    ],
                    "patternProperties": {
                        ".*": {
                            "additionalProperties": false,
                            "properties": {
                                "Balance": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Code": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "Head": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "Nonce": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "t01236": {
                                "Code": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "Head": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "Nonce": 42,
                                "Balance": "0"
                            }
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1034"
            }
        },
        {
            "name": "Filecoin.StateCirculatingSupply",
            "description": "```go\nfunc (c *FullNodeStruct) StateCirculatingSupply(ctx context.Context, tsk types.TipSetKey) (abi.TokenAmount, error) {\n\treturn c.Internal.StateCirculatingSupply(ctx, tsk)\n}\n```",
            "summary": "StateCirculatingSupply returns the exact circulating supply of Filecoin at the given tipset.\nThis is not used anywhere in the protocol itself, and is only for external consumption.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "abi.TokenAmount",
                "description": "abi.TokenAmount",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "0",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1070"
            }
        },
        {
            "name": "Filecoin.StateCompute",
            "description": "```go\nfunc (c *FullNodeStruct) StateCompute(ctx context.Context, height abi.ChainEpoch, msgs []*types.Message, tsk types.TipSetKey) (*api.ComputeStateOutput, error) {\n\treturn c.Internal.StateCompute(ctx, height, msgs, tsk)\n}\n```",
            "summary": "StateCompute is a flexible command that applies the given messages on the given tipset.\nThe messages are run as though the VM were at the provided height.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "height",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            10101
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "msgs",
                    "description": "[]*types.Message",
                    "summary": "",
                    "schema": {
                        "items": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "From": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasFeeCap": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "GasLimit": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "GasPremium": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Method": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Nonce": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Params": {
                                        "media": {
                                            "binaryEncoding": "base64"
                                        },
                                        "type": "string"
                                    },
                                    "To": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Value": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Version": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": [
                                    "object"
                                ]
                            }
                        ],
                        "type": [
                            "array"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.ComputeStateOutput",
                "description": "*api.ComputeStateOutput",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Root": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Trace": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "Duration": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Error": {
                                        "type": "string"
                                    },
                                    "ExecutionTrace": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Duration": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "Error": {
                                                "type": "string"
                                            },
                                            "GasCharges": {
                                                "items": {
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "Name": {
                                                            "type": "string"
                                                        },
                                                        "cg": {
                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                            "title": "integer",
                                                            "type": "string"
                                                        },
                                                        "ex": {
                                                            "additionalProperties": true,
                                                            "type": "object"
                                                        },
                                                        "loc": {
                                                            "items": {
                                                                "additionalProperties": false,
                                                                "properties": {
                                                                    "File": {
                                                                        "type": "string"
                                                                    },
                                                                    "Function": {
                                                                        "type": "string"
                                                                    },
                                                                    "Line": {
                                                                        "pattern": "^0x[a-fA-F0-9]+$",
                                                                        "title": "integer",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "sg": {
                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                            "title": "integer",
                                                            "type": "string"
                                                        },
                                                        "tg": {
                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                            "title": "integer",
                                                            "type": "string"
                                                        },
                                                        "tt": {
                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                            "title": "integer",
                                                            "type": "string"
                                                        },
                                                        "vcg": {
                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                            "title": "integer",
                                                            "type": "string"
                                                        },
                                                        "vsg": {
                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                            "title": "integer",
                                                            "type": "string"
                                                        },
                                                        "vtg": {
                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                            "title": "integer",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "Msg": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "From": {
                                                        "additionalProperties": false,
                                                        "type": "object"
                                                    },
                                                    "GasFeeCap": {
                                                        "additionalProperties": false,
                                                        "type": "object"
                                                    },
                                                    "GasLimit": {
                                                        "pattern": "^0x[a-fA-F0-9]+$",
                                                        "title": "integer",
                                                        "type": "string"
                                                    },
                                                    "GasPremium": {
                                                        "additionalProperties": false,
                                                        "type": "object"
                                                    },
                                                    "Method": {
                                                        "pattern": "^0x[a-fA-F0-9]+$",
                                                        "title": "integer",
                                                        "type": "string"
                                                    },
                                                    "Nonce": {
                                                        "pattern": "^0x[a-fA-F0-9]+$",
                                                        "title": "integer",
                                                        "type": "string"
                                                    },
                                                    "Params": {
                                                        "media": {
                                                            "binaryEncoding": "base64"
                                                        },
                                                        "type": "string"
                                                    },
                                                    "To": {
                                                        "additionalProperties": false,
                                                        "type": "object"
                                                    },
                                                    "Value": {
                                                        "additionalProperties": false,
                                                        "type": "object"
                                                    },
                                                    "Version": {
                                                        "pattern": "^0x[a-fA-F0-9]+$",
                                                        "title": "integer",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "MsgRct": {
                                                "additionalProperties": false,
                                                "properties": {
                                                    "ExitCode": {
                                                        "pattern": "^0x[a-fA-F0-9]+$",
                                                        "title": "integer",
                                                        "type": "string"
                                                    },
                                                    "GasUsed": {
                                                        "pattern": "^0x[a-fA-F0-9]+$",
                                                        "title": "integer",
                                                        "type": "string"
                                                    },
                                                    "Return": {
                                                        "media": {
                                                            "binaryEncoding": "base64"
                                                        },
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "Subcalls": {
                                                "items": {},
                                                "type": "array"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "GasCost": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "BaseFeeBurn": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasUsed": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Message": {
                                                "title": "Content Identifier",
                                                "type": "string"
                                            },
                                            "MinerPenalty": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "MinerTip": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "OverEstimationBurn": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Refund": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "TotalCost": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Msg": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "From": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasFeeCap": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "GasLimit": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "GasPremium": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Method": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "Nonce": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "Params": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "To": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Value": {
                                                "additionalProperties": false,
                                                "type": "object"
                                            },
                                            "Version": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "MsgCid": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "MsgRct": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "ExitCode": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "GasUsed": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "Return": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Root": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Trace": null
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1050"
            }
        },
        {
            "name": "Filecoin.StateDealProviderCollateralBounds",
            "description": "```go\nfunc (c *FullNodeStruct) StateDealProviderCollateralBounds(ctx context.Context, size abi.PaddedPieceSize, verified bool, tsk types.TipSetKey) (api.DealCollateralBounds, error) {\n\treturn c.Internal.StateDealProviderCollateralBounds(ctx, size, verified, tsk)\n}\n```",
            "summary": "StateDealProviderCollateralBounds returns the min and max collateral a storage provider\ncan issue. It takes the deal size and verified status as parameters.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "size",
                    "description": "abi.PaddedPieceSize",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            1032
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "verified",
                    "description": "bool",
                    "summary": "",
                    "schema": {
                        "examples": [
                            true
                        ],
                        "type": [
                            "boolean"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "api.DealCollateralBounds",
                "description": "api.DealCollateralBounds",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Max": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Min": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Min": "0",
                            "Max": "0"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1066"
            }
        },
        {
            "name": "Filecoin.StateDecodeParams",
            "description": "```go\nfunc (c *FullNodeStruct) StateDecodeParams(ctx context.Context, toAddr address.Address, method abi.MethodNum, params []byte, tsk types.TipSetKey) (interface{}, error) {\n\treturn c.Internal.StateDecodeParams(ctx, toAddr, method, params, tsk)\n}\n```",
            "summary": "StateDecodeParams attempts to decode the provided params, based on the recipient actor address and method number.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "toAddr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "method",
                    "description": "abi.MethodNum",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            1
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "params",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "interface{}",
                "description": "interface{}",
                "summary": "",
                "schema": {
                    "additionalProperties": true,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1046"
            }
        },
        {
            "name": "Filecoin.StateGetActor",
            "description": "```go\nfunc (c *FullNodeStruct) StateGetActor(ctx context.Context, actor address.Address, tsk types.TipSetKey) (*types.Actor, error) {\n\treturn c.Internal.StateGetActor(ctx, actor, tsk)\n}\n```",
            "summary": "StateGetActor returns the indicated actor's nonce and balance.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "actor",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.Actor",
                "description": "*types.Actor",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Balance": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Code": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Head": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Nonce": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Code": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Head": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Nonce": 42,
                            "Balance": "0"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L982"
            }
        },
        {
            "name": "Filecoin.StateGetReceipt",
            "description": "```go\nfunc (c *FullNodeStruct) StateGetReceipt(ctx context.Context, msg cid.Cid, tsk types.TipSetKey) (*types.MessageReceipt, error) {\n\treturn c.Internal.StateGetReceipt(ctx, msg, tsk)\n}\n```",
            "summary": "StateGetReceipt returns the message receipt for the given message\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msg",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.MessageReceipt",
                "description": "*types.MessageReceipt",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "ExitCode": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "GasUsed": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Return": {
                            "media": {
                                "binaryEncoding": "base64"
                            },
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "ExitCode": 0,
                            "Return": "Ynl0ZSBhcnJheQ==",
                            "GasUsed": 9
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1038"
            }
        },
        {
            "name": "Filecoin.StateListActors",
            "description": "```go\nfunc (c *FullNodeStruct) StateListActors(ctx context.Context, tsk types.TipSetKey) ([]address.Address, error) {\n\treturn c.Internal.StateListActors(ctx, tsk)\n}\n```",
            "summary": "StateListActors returns the addresses of every actor in the state\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]address.Address",
                "description": "[]address.Address",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1006"
            }
        },
        {
            "name": "Filecoin.StateListMessages",
            "description": "```go\nfunc (c *FullNodeStruct) StateListMessages(ctx context.Context, match *api.MessageMatch, tsk types.TipSetKey, toht abi.ChainEpoch) ([]cid.Cid, error) {\n\treturn c.Internal.StateListMessages(ctx, match, tsk, toht)\n}\n```",
            "summary": "StateListMessages looks back and returns all messages with a matching to or from address, stopping at the given height.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "match",
                    "description": "*api.MessageMatch",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "From": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "To": {
                                "additionalProperties": false,
                                "type": "object"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "toht",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            10101
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]cid.Cid",
                "description": "[]cid.Cid",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "title": "Content Identifier",
                            "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                            "type": [
                                "string"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1042"
            }
        },
        {
            "name": "Filecoin.StateListMiners",
            "description": "```go\nfunc (c *FullNodeStruct) StateListMiners(ctx context.Context, tsk types.TipSetKey) ([]address.Address, error) {\n\treturn c.Internal.StateListMiners(ctx, tsk)\n}\n```",
            "summary": "StateListMiners returns the addresses of every miner that has claimed power in the Power Actor\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]address.Address",
                "description": "[]address.Address",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1002"
            }
        },
        {
            "name": "Filecoin.StateLookupID",
            "description": "```go\nfunc (c *FullNodeStruct) StateLookupID(ctx context.Context, addr address.Address, tsk types.TipSetKey) (address.Address, error) {\n\treturn c.Internal.StateLookupID(ctx, addr, tsk)\n}\n```",
            "summary": "StateLookupID retrieves the ID address of the given address\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "addr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "address.Address",
                "description": "address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "f01234",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1026"
            }
        },
        {
            "name": "Filecoin.StateMarketBalance",
            "description": "```go\nfunc (c *FullNodeStruct) StateMarketBalance(ctx context.Context, addr address.Address, tsk types.TipSetKey) (api.MarketBalance, error) {\n\treturn c.Internal.StateMarketBalance(ctx, addr, tsk)\n}\n```",
            "summary": "StateMarketBalance looks up the Escrow and Locked balances of the given address in the Storage Market\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "addr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "api.MarketBalance",
                "description": "api.MarketBalance",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "Escrow": "0",
                            "Locked": "0"
                        }
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "Escrow": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Locked": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Escrow": "0",
                            "Locked": "0"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1010"
            }
        },
        {
            "name": "Filecoin.StateMarketDeals",
            "description": "```go\nfunc (c *FullNodeStruct) StateMarketDeals(ctx context.Context, tsk types.TipSetKey) (map[string]api.MarketDeal, error) {\n\treturn c.Internal.StateMarketDeals(ctx, tsk)\n}\n```",
            "summary": "StateMarketDeals returns information about every deal in the Storage Market\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "map[string]api.MarketDeal",
                "description": "map[string]api.MarketDeal",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "t026363": {
                                "Proposal": {
                                    "PieceCID": {
                                        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                    },
                                    "PieceSize": 1032,
                                    "VerifiedDeal": true,
                                    "Client": "f01234",
                                    "Provider": "f01234",
                                    "Label": "string value",
                                    "StartEpoch": 10101,
                                    "EndEpoch": 10101,
                                    "StoragePricePerEpoch": "0",
                                    "ProviderCollateral": "0",
                                    "ClientCollateral": "0"
                                },
                                "State": {
                                    "SectorStartEpoch": 10101,
                                    "LastUpdatedEpoch": 10101,
                                    "SlashEpoch": 10101
                                }
                            }
                        }
                    ],
                    "patternProperties": {
                        ".*": {
                            "additionalProperties": false,
                            "properties": {
                                "Proposal": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "Client": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "ClientCollateral": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "EndEpoch": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "Label": {
                                            "type": "string"
                                        },
                                        "PieceCID": {
                                            "title": "Content Identifier",
                                            "type": "string"
                                        },
                                        "PieceSize": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "Provider": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "ProviderCollateral": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "StartEpoch": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "StoragePricePerEpoch": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "VerifiedDeal": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "State": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "LastUpdatedEpoch": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "SectorStartEpoch": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "SlashEpoch": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "t026363": {
                                "Proposal": {
                                    "PieceCID": {
                                        "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                    },
                                    "PieceSize": 1032,
                                    "VerifiedDeal": true,
                                    "Client": "f01234",
                                    "Provider": "f01234",
                                    "Label": "string value",
                                    "StartEpoch": 10101,
                                    "EndEpoch": 10101,
                                    "StoragePricePerEpoch": "0",
                                    "ProviderCollateral": "0",
                                    "ClientCollateral": "0"
                                },
                                "State": {
                                    "SectorStartEpoch": 10101,
                                    "LastUpdatedEpoch": 10101,
                                    "SlashEpoch": 10101
                                }
                            }
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1018"
            }
        },
        {
            "name": "Filecoin.StateMarketParticipants",
            "description": "```go\nfunc (c *FullNodeStruct) StateMarketParticipants(ctx context.Context, tsk types.TipSetKey) (map[string]api.MarketBalance, error) {\n\treturn c.Internal.StateMarketParticipants(ctx, tsk)\n}\n```",
            "summary": "StateMarketParticipants returns the Escrow and Locked balances of every participant in the Storage Market\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "map[string]api.MarketBalance",
                "description": "map[string]api.MarketBalance",
                "summary": "",
                "schema": {
                    "examples": [
                        {
                            "t026363": {
                                "Escrow": "0",
                                "Locked": "0"
                            }
                        }
                    ],
                    "patternProperties": {
                        ".*": {
                            "additionalProperties": false,
                            "properties": {
                                "Escrow": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Locked": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "t026363": {
                                "Escrow": "0",
                                "Locked": "0"
                            }
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1014"
            }
        },
        {
            "name": "Filecoin.StateMarketStorageDeal",
            "description": "```go\nfunc (c *FullNodeStruct) StateMarketStorageDeal(ctx context.Context, dealid abi.DealID, tsk types.TipSetKey) (*api.MarketDeal, error) {\n\treturn c.Internal.StateMarketStorageDeal(ctx, dealid, tsk)\n}\n```",
            "summary": "StateMarketStorageDeal returns information about the indicated deal\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "dealid",
                    "description": "abi.DealID",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            5432
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.MarketDeal",
                "description": "*api.MarketDeal",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Proposal": {
                            "additionalProperties": false,
                            "properties": {
                                "Client": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ClientCollateral": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "EndEpoch": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Label": {
                                    "type": "string"
                                },
                                "PieceCID": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "PieceSize": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Provider": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ProviderCollateral": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "StartEpoch": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "StoragePricePerEpoch": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "VerifiedDeal": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "State": {
                            "additionalProperties": false,
                            "properties": {
                                "LastUpdatedEpoch": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "SectorStartEpoch": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "SlashEpoch": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Proposal": {
                                "PieceCID": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "PieceSize": 1032,
                                "VerifiedDeal": true,
                                "Client": "f01234",
                                "Provider": "f01234",
                                "Label": "string value",
                                "StartEpoch": 10101,
                                "EndEpoch": 10101,
                                "StoragePricePerEpoch": "0",
                                "ProviderCollateral": "0",
                                "ClientCollateral": "0"
                            },
                            "State": {
                                "SectorStartEpoch": 10101,
                                "LastUpdatedEpoch": 10101,
                                "SlashEpoch": 10101
                            }
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1022"
            }
        },
        {
            "name": "Filecoin.StateMinerActiveSectors",
            "description": "```go\nfunc (c *FullNodeStruct) StateMinerActiveSectors(ctx context.Context, addr address.Address, tsk types.TipSetKey) ([]*miner.SectorOnChainInfo, error) {\n\treturn c.Internal.StateMinerActiveSectors(ctx, addr, tsk)\n}\n```",
            "summary": "StateMinerActiveSectors returns info about sectors that a given miner is actively proving.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "addr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*miner.SectorOnChainInfo",
                "description": "[]*miner.SectorOnChainInfo",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Activation": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "DealIDs": {
                                    "items": {
                                        "description": "Hex representation of the integer",
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "DealWeight": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ExpectedDayReward": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ExpectedStoragePledge": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Expiration": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "InitialPledge": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "SealProof": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "SealedCID": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "SectorNumber": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "VerifiedDealWeight": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L906"
            }
        },
        {
            "name": "Filecoin.StateMinerAvailableBalance",
            "description": "```go\nfunc (c *FullNodeStruct) StateMinerAvailableBalance(ctx context.Context, maddr address.Address, tsk types.TipSetKey) (types.BigInt, error) {\n\treturn c.Internal.StateMinerAvailableBalance(ctx, maddr, tsk)\n}\n```",
            "summary": "StateMinerAvailableBalance returns the portion of a miner's balance that can be withdrawn or spent\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "maddr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "0",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L950"
            }
        },
        {
            "name": "Filecoin.StateMinerDeadlines",
            "description": "```go\nfunc (c *FullNodeStruct) StateMinerDeadlines(ctx context.Context, actor address.Address, tsk types.TipSetKey) ([]api.Deadline, error) {\n\treturn c.Internal.StateMinerDeadlines(ctx, actor, tsk)\n}\n```",
            "summary": "StateMinerDeadlines returns all the proving deadlines for the given miner\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "actor",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]api.Deadline",
                "description": "[]api.Deadline",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "PostSubmissions": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L922"
            }
        },
        {
            "name": "Filecoin.StateMinerFaults",
            "description": "```go\nfunc (c *FullNodeStruct) StateMinerFaults(ctx context.Context, actor address.Address, tsk types.TipSetKey) (bitfield.BitField, error) {\n\treturn c.Internal.StateMinerFaults(ctx, actor, tsk)\n}\n```",
            "summary": "StateMinerFaults returns a bitfield indicating the faulty sectors of the given miner\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "actor",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bitfield.BitField",
                "description": "bitfield.BitField",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            5,
                            1
                        ]
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": [
                            5,
                            1
                        ],
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L930"
            }
        },
        {
            "name": "Filecoin.StateMinerInfo",
            "description": "```go\nfunc (c *FullNodeStruct) StateMinerInfo(ctx context.Context, actor address.Address, tsk types.TipSetKey) (miner.MinerInfo, error) {\n\treturn c.Internal.StateMinerInfo(ctx, actor, tsk)\n}\n```",
            "summary": "StateMinerInfo returns info about the indicated miner\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "actor",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "miner.MinerInfo",
                "description": "miner.MinerInfo",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "ConsensusFaultElapsed": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "ControlAddresses": {
                            "items": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "Multiaddrs": {
                            "items": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "NewWorker": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Owner": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "PeerId": {
                            "type": "string"
                        },
                        "SealProofType": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "SectorSize": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "WindowPoStPartitionSectors": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Worker": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "WorkerChangeEpoch": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Owner": "f01234",
                            "Worker": "f01234",
                            "NewWorker": "f01234",
                            "ControlAddresses": null,
                            "WorkerChangeEpoch": 10101,
                            "PeerId": "12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf",
                            "Multiaddrs": null,
                            "SealProofType": 8,
                            "SectorSize": 34359738368,
                            "WindowPoStPartitionSectors": 42,
                            "ConsensusFaultElapsed": 10101
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L918"
            }
        },
        {
            "name": "Filecoin.StateMinerInitialPledgeCollateral",
            "description": "```go\nfunc (c *FullNodeStruct) StateMinerInitialPledgeCollateral(ctx context.Context, maddr address.Address, pci miner.SectorPreCommitInfo, tsk types.TipSetKey) (types.BigInt, error) {\n\treturn c.Internal.StateMinerInitialPledgeCollateral(ctx, maddr, pci, tsk)\n}\n```",
            "summary": "StateMinerInitialPledgeCollateral returns the initial pledge collateral for the specified miner's sector\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "maddr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "pci",
                    "description": "miner.SectorPreCommitInfo",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "DealIDs": {
                                "items": {
                                    "description": "Hex representation of the integer",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "Expiration": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "ReplaceCapacity": {
                                "type": "boolean"
                            },
                            "ReplaceSectorDeadline": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "ReplaceSectorNumber": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "ReplaceSectorPartition": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "SealProof": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "SealRandEpoch": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "SealedCID": {
                                "title": "Content Identifier",
                                "type": "string"
                            },
                            "SectorNumber": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "0",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L946"
            }
        },
        {
            "name": "Filecoin.StateMinerPartitions",
            "description": "```go\nfunc (c *FullNodeStruct) StateMinerPartitions(ctx context.Context, m address.Address, dlIdx uint64, tsk types.TipSetKey) ([]api.Partition, error) {\n\treturn c.Internal.StateMinerPartitions(ctx, m, dlIdx, tsk)\n}\n```",
            "summary": "StateMinerPartitions returns all partitions in the specified deadline\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "m",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "dlIdx",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            42
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]api.Partition",
                "description": "[]api.Partition",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "ActiveSectors": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "AllSectors": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "FaultySectors": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "LiveSectors": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "RecoveringSectors": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L926"
            }
        },
        {
            "name": "Filecoin.StateMinerPower",
            "description": "```go\nfunc (c *FullNodeStruct) StateMinerPower(ctx context.Context, a address.Address, tsk types.TipSetKey) (*api.MinerPower, error) {\n\treturn c.Internal.StateMinerPower(ctx, a, tsk)\n}\n```",
            "summary": "StateMinerPower returns the power of the indicated miner\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "a",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.MinerPower",
                "description": "*api.MinerPower",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "HasMinPower": {
                            "type": "boolean"
                        },
                        "MinerPower": {
                            "additionalProperties": false,
                            "properties": {
                                "QualityAdjPower": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "RawBytePower": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "TotalPower": {
                            "additionalProperties": false,
                            "properties": {
                                "QualityAdjPower": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "RawBytePower": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "MinerPower": {
                                "RawBytePower": "0",
                                "QualityAdjPower": "0"
                            },
                            "TotalPower": {
                                "RawBytePower": "0",
                                "QualityAdjPower": "0"
                            },
                            "HasMinPower": true
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L914"
            }
        },
        {
            "name": "Filecoin.StateMinerPreCommitDepositForPower",
            "description": "```go\nfunc (c *FullNodeStruct) StateMinerPreCommitDepositForPower(ctx context.Context, maddr address.Address, pci miner.SectorPreCommitInfo, tsk types.TipSetKey) (types.BigInt, error) {\n\treturn c.Internal.StateMinerPreCommitDepositForPower(ctx, maddr, pci, tsk)\n}\n```",
            "summary": "StateMinerInitialPledgeCollateral returns the precommit deposit for the specified miner's sector\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "maddr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "pci",
                    "description": "miner.SectorPreCommitInfo",
                    "summary": "",
                    "schema": {
                        "examples": [
                            {
                                "SealProof": 8,
                                "SectorNumber": 9,
                                "SealedCID": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "SealRandEpoch": 10101,
                                "DealIDs": null,
                                "Expiration": 10101,
                                "ReplaceCapacity": true,
                                "ReplaceSectorDeadline": 42,
                                "ReplaceSectorPartition": 42,
                                "ReplaceSectorNumber": 9
                            }
                        ],
                        "additionalProperties": false,
                        "properties": {
                            "DealIDs": {
                                "items": {
                                    "description": "Hex representation of the integer",
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "Expiration": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "ReplaceCapacity": {
                                "type": "boolean"
                            },
                            "ReplaceSectorDeadline": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "ReplaceSectorNumber": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "ReplaceSectorPartition": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "SealProof": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "SealRandEpoch": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "SealedCID": {
                                "title": "Content Identifier",
                                "type": "string"
                            },
                            "SectorNumber": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "0",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L942"
            }
        },
        {
            "name": "Filecoin.StateMinerProvingDeadline",
            "description": "```go\nfunc (c *FullNodeStruct) StateMinerProvingDeadline(ctx context.Context, addr address.Address, tsk types.TipSetKey) (*dline.Info, error) {\n\treturn c.Internal.StateMinerProvingDeadline(ctx, addr, tsk)\n}\n```",
            "summary": "StateMinerProvingDeadline calculates the deadline at some epoch for a proving period\nand returns the deadline-related calculations.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "addr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*dline.Info",
                "description": "*dline.Info",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Challenge": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Close": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "CurrentEpoch": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "FaultCutoff": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "FaultDeclarationCutoff": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Index": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Open": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "PeriodStart": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "WPoStChallengeLookback": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "WPoStChallengeWindow": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "WPoStPeriodDeadlines": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "WPoStProvingPeriod": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "CurrentEpoch": 10101,
                            "PeriodStart": 10101,
                            "Index": 42,
                            "Open": 10101,
                            "Close": 10101,
                            "Challenge": 10101,
                            "FaultCutoff": 10101,
                            "WPoStPeriodDeadlines": 42,
                            "WPoStProvingPeriod": 10101,
                            "WPoStChallengeWindow": 10101,
                            "WPoStChallengeLookback": 10101,
                            "FaultDeclarationCutoff": 10101
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L910"
            }
        },
        {
            "name": "Filecoin.StateMinerRecoveries",
            "description": "```go\nfunc (c *FullNodeStruct) StateMinerRecoveries(ctx context.Context, actor address.Address, tsk types.TipSetKey) (bitfield.BitField, error) {\n\treturn c.Internal.StateMinerRecoveries(ctx, actor, tsk)\n}\n```",
            "summary": "StateMinerRecoveries returns a bitfield indicating the recovering sectors of the given miner\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "actor",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bitfield.BitField",
                "description": "bitfield.BitField",
                "summary": "",
                "schema": {
                    "examples": [
                        [
                            5,
                            1
                        ]
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": [
                            5,
                            1
                        ],
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L938"
            }
        },
        {
            "name": "Filecoin.StateMinerSectorAllocated",
            "description": "```go\nfunc (c *FullNodeStruct) StateMinerSectorAllocated(ctx context.Context, maddr address.Address, s abi.SectorNumber, tsk types.TipSetKey) (bool, error) {\n\treturn c.Internal.StateMinerSectorAllocated(ctx, maddr, s, tsk)\n}\n```",
            "summary": "StateMinerSectorAllocated checks if a sector is allocated\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "maddr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "s",
                    "description": "abi.SectorNumber",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            9
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": true,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L954"
            }
        },
        {
            "name": "Filecoin.StateMinerSectorCount",
            "description": "```go\nfunc (c *FullNodeStruct) StateMinerSectorCount(ctx context.Context, addr address.Address, tsk types.TipSetKey) (api.MinerSectors, error) {\n\treturn c.Internal.StateMinerSectorCount(ctx, addr, tsk)\n}\n```",
            "summary": "StateMinerSectorCount returns the number of sectors in a miner's sector set and proving set\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "addr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "api.MinerSectors",
                "description": "api.MinerSectors",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Active": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Faulty": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Live": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Live": 42,
                            "Active": 42,
                            "Faulty": 42
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L273"
            }
        },
        {
            "name": "Filecoin.StateMinerSectors",
            "description": "```go\nfunc (c *FullNodeStruct) StateMinerSectors(ctx context.Context, addr address.Address, sectorNos *bitfield.BitField, tsk types.TipSetKey) ([]*miner.SectorOnChainInfo, error) {\n\treturn c.Internal.StateMinerSectors(ctx, addr, sectorNos, tsk)\n}\n```",
            "summary": "StateMinerSectors returns info about the given miner's sectors. If the filter bitfield is nil, all sectors are included.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "addr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "sectorNos",
                    "description": "*bitfield.BitField",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "[]*miner.SectorOnChainInfo",
                "description": "[]*miner.SectorOnChainInfo",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "properties": {
                                "Activation": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "DealIDs": {
                                    "items": {
                                        "description": "Hex representation of the integer",
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "DealWeight": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ExpectedDayReward": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "ExpectedStoragePledge": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Expiration": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "InitialPledge": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "SealProof": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "SealedCID": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "SectorNumber": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "VerifiedDealWeight": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L902"
            }
        },
        {
            "name": "Filecoin.StateNetworkName",
            "description": "```go\nfunc (c *FullNodeStruct) StateNetworkName(ctx context.Context) (dtypes.NetworkName, error) {\n\treturn c.Internal.StateNetworkName(ctx)\n}\n```",
            "summary": "StateNetworkName returns the name of the network the node is synced to\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "dtypes.NetworkName",
                "description": "dtypes.NetworkName",
                "summary": "",
                "schema": {
                    "examples": [
                        "lotus"
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "lotus",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L898"
            }
        },
        {
            "name": "Filecoin.StateNetworkVersion",
            "description": "```go\nfunc (c *FullNodeStruct) StateNetworkVersion(ctx context.Context, tsk types.TipSetKey) (stnetwork.Version, error) {\n\treturn c.Internal.StateNetworkVersion(ctx, tsk)\n}\n```",
            "summary": "StateNetworkVersion returns the network version at the given tipset\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "stnetwork.Version",
                "description": "stnetwork.Version",
                "summary": "",
                "schema": {
                    "title": "integer",
                    "description": "Hex representation of the integer",
                    "examples": [
                        8
                    ],
                    "pattern": "^0x[a-fA-F0-9]+$",
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": 8,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1078"
            }
        },
        {
            "name": "Filecoin.StateReadState",
            "description": "```go\nfunc (c *FullNodeStruct) StateReadState(ctx context.Context, addr address.Address, tsk types.TipSetKey) (*api.ActorState, error) {\n\treturn c.Internal.StateReadState(ctx, addr, tsk)\n}\n```",
            "summary": "StateReadState returns the indicated actor's state.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "addr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.ActorState",
                "description": "*api.ActorState",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Balance": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "State": {
                            "additionalProperties": true,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Balance": "0",
                            "State": {}
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L986"
            }
        },
        {
            "name": "Filecoin.StateReplay",
            "description": "```go\nfunc (c *FullNodeStruct) StateReplay(ctx context.Context, tsk types.TipSetKey, mc cid.Cid) (*api.InvocResult, error) {\n\treturn c.Internal.StateReplay(ctx, tsk, mc)\n}\n```",
            "summary": "StateReplay replays a given message, assuming it was included in a block in the specified tipset.\nIf no tipset key is provided, the appropriate tipset is looked up.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "mc",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.InvocResult",
                "description": "*api.InvocResult",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Duration": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Error": {
                            "type": "string"
                        },
                        "ExecutionTrace": {
                            "additionalProperties": false,
                            "properties": {
                                "Duration": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Error": {
                                    "type": "string"
                                },
                                "GasCharges": {
                                    "items": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Name": {
                                                "type": "string"
                                            },
                                            "cg": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "ex": {
                                                "additionalProperties": true,
                                                "type": "object"
                                            },
                                            "loc": {
                                                "items": {
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "File": {
                                                            "type": "string"
                                                        },
                                                        "Function": {
                                                            "type": "string"
                                                        },
                                                        "Line": {
                                                            "pattern": "^0x[a-fA-F0-9]+$",
                                                            "title": "integer",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            },
                                            "sg": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "tg": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "tt": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "vcg": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "vsg": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            },
                                            "vtg": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "Msg": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "From": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasFeeCap": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "GasLimit": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "GasPremium": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Method": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "Nonce": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "Params": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        },
                                        "To": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Value": {
                                            "additionalProperties": false,
                                            "type": "object"
                                        },
                                        "Version": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "MsgRct": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "ExitCode": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "GasUsed": {
                                            "pattern": "^0x[a-fA-F0-9]+$",
                                            "title": "integer",
                                            "type": "string"
                                        },
                                        "Return": {
                                            "media": {
                                                "binaryEncoding": "base64"
                                            },
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "Subcalls": {
                                    "items": {},
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "GasCost": {
                            "additionalProperties": false,
                            "properties": {
                                "BaseFeeBurn": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasUsed": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Message": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "MinerPenalty": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "MinerTip": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "OverEstimationBurn": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Refund": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "TotalCost": {
                                    "additionalProperties": false,
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "Msg": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Nonce": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "MsgCid": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "MsgRct": {
                            "additionalProperties": false,
                            "properties": {
                                "ExitCode": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "GasUsed": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Return": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "MsgCid": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Msg": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "MsgRct": {
                                "ExitCode": 0,
                                "Return": "Ynl0ZSBhcnJheQ==",
                                "GasUsed": 9
                            },
                            "GasCost": {
                                "Message": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "GasUsed": "0",
                                "BaseFeeBurn": "0",
                                "OverEstimationBurn": "0",
                                "MinerPenalty": "0",
                                "MinerTip": "0",
                                "Refund": "0",
                                "TotalCost": "0"
                            },
                            "ExecutionTrace": {
                                "Msg": {
                                    "Version": 42,
                                    "To": "f01234",
                                    "From": "f01234",
                                    "Nonce": 42,
                                    "Value": "0",
                                    "GasLimit": 9,
                                    "GasFeeCap": "0",
                                    "GasPremium": "0",
                                    "Method": 1,
                                    "Params": "Ynl0ZSBhcnJheQ==",
                                    "CID": {
                                        "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                    }
                                },
                                "MsgRct": {
                                    "ExitCode": 0,
                                    "Return": "Ynl0ZSBhcnJheQ==",
                                    "GasUsed": 9
                                },
                                "Error": "string value",
                                "Duration": 60000000000,
                                "GasCharges": null,
                                "Subcalls": null
                            },
                            "Error": "string value",
                            "Duration": 60000000000
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L978"
            }
        },
        {
            "name": "Filecoin.StateSearchMsg",
            "description": "```go\nfunc (c *FullNodeStruct) StateSearchMsg(ctx context.Context, msgc cid.Cid) (*api.MsgLookup, error) {\n\treturn c.Internal.StateSearchMsg(ctx, msgc)\n}\n```",
            "summary": "StateSearchMsg searches for a message in the chain, and returns its receipt and the tipset where it was executed\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msgc",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.MsgLookup",
                "description": "*api.MsgLookup",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Height": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Message": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Receipt": {
                            "additionalProperties": false,
                            "properties": {
                                "ExitCode": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "GasUsed": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Return": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "ReturnDec": {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "TipSet": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Message": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Receipt": {
                                "ExitCode": 0,
                                "Return": "Ynl0ZSBhcnJheQ==",
                                "GasUsed": 9
                            },
                            "ReturnDec": {},
                            "TipSet": [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ],
                            "Height": 10101
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L998"
            }
        },
        {
            "name": "Filecoin.StateSectorExpiration",
            "description": "```go\nfunc (c *FullNodeStruct) StateSectorExpiration(ctx context.Context, maddr address.Address, n abi.SectorNumber, tsk types.TipSetKey) (*miner.SectorExpiration, error) {\n\treturn c.Internal.StateSectorExpiration(ctx, maddr, n, tsk)\n}\n```",
            "summary": "StateSectorExpiration returns epoch at which given sector will expire\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "maddr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "n",
                    "description": "abi.SectorNumber",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            9
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*miner.SectorExpiration",
                "description": "*miner.SectorExpiration",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Early": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "OnTime": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "OnTime": 10101,
                            "Early": 10101
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L966"
            }
        },
        {
            "name": "Filecoin.StateSectorGetInfo",
            "description": "```go\nfunc (c *FullNodeStruct) StateSectorGetInfo(ctx context.Context, maddr address.Address, n abi.SectorNumber, tsk types.TipSetKey) (*miner.SectorOnChainInfo, error) {\n\treturn c.Internal.StateSectorGetInfo(ctx, maddr, n, tsk)\n}\n```",
            "summary": "StateSectorGetInfo returns the on-chain info for the specified miner's sector. Returns null in case the sector info isn't found\nNOTE: returned info.Expiration may not be accurate in some cases, use StateSectorExpiration to get accurate\nexpiration epoch\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "maddr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "n",
                    "description": "abi.SectorNumber",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            9
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*miner.SectorOnChainInfo",
                "description": "*miner.SectorOnChainInfo",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Activation": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "DealIDs": {
                            "items": {
                                "description": "Hex representation of the integer",
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "DealWeight": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "ExpectedDayReward": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "ExpectedStoragePledge": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Expiration": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "InitialPledge": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "SealProof": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "SealedCID": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "SectorNumber": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "VerifiedDealWeight": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "SectorNumber": 9,
                            "SealProof": 8,
                            "SealedCID": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "DealIDs": null,
                            "Activation": 10101,
                            "Expiration": 10101,
                            "DealWeight": "0",
                            "VerifiedDealWeight": "0",
                            "InitialPledge": "0",
                            "ExpectedDayReward": "0",
                            "ExpectedStoragePledge": "0"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L962"
            }
        },
        {
            "name": "Filecoin.StateSectorPartition",
            "description": "```go\nfunc (c *FullNodeStruct) StateSectorPartition(ctx context.Context, maddr address.Address, sectorNumber abi.SectorNumber, tok types.TipSetKey) (*miner.SectorLocation, error) {\n\treturn c.Internal.StateSectorPartition(ctx, maddr, sectorNumber, tok)\n}\n```",
            "summary": "StateSectorPartition finds deadline/partition with the specified sector\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "maddr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "sectorNumber",
                    "description": "abi.SectorNumber",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            9
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tok",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*miner.SectorLocation",
                "description": "*miner.SectorLocation",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Deadline": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Partition": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Deadline": 42,
                            "Partition": 42
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L970"
            }
        },
        {
            "name": "Filecoin.StateSectorPreCommitInfo",
            "description": "```go\nfunc (c *FullNodeStruct) StateSectorPreCommitInfo(ctx context.Context, maddr address.Address, n abi.SectorNumber, tsk types.TipSetKey) (miner.SectorPreCommitOnChainInfo, error) {\n\treturn c.Internal.StateSectorPreCommitInfo(ctx, maddr, n, tsk)\n}\n```",
            "summary": "StateSectorPreCommitInfo returns the PreCommit info for the specified miner's sector\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "maddr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "n",
                    "description": "abi.SectorNumber",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            9
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "miner.SectorPreCommitOnChainInfo",
                "description": "miner.SectorPreCommitOnChainInfo",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "DealWeight": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "Info": {
                            "additionalProperties": false,
                            "properties": {
                                "DealIDs": {
                                    "items": {
                                        "description": "Hex representation of the integer",
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "Expiration": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "ReplaceCapacity": {
                                    "type": "boolean"
                                },
                                "ReplaceSectorDeadline": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "ReplaceSectorNumber": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "ReplaceSectorPartition": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "SealProof": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "SealRandEpoch": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "SealedCID": {
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "SectorNumber": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "PreCommitDeposit": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "PreCommitEpoch": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "VerifiedDealWeight": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Info": {
                                "SealProof": 8,
                                "SectorNumber": 9,
                                "SealedCID": {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                "SealRandEpoch": 10101,
                                "DealIDs": null,
                                "Expiration": 10101,
                                "ReplaceCapacity": true,
                                "ReplaceSectorDeadline": 42,
                                "ReplaceSectorPartition": 42,
                                "ReplaceSectorNumber": 9
                            },
                            "PreCommitDeposit": "0",
                            "PreCommitEpoch": 10101,
                            "DealWeight": "0",
                            "VerifiedDealWeight": "0"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L958"
            }
        },
        {
            "name": "Filecoin.StateVMCirculatingSupplyInternal",
            "description": "```go\nfunc (c *FullNodeStruct) StateVMCirculatingSupplyInternal(ctx context.Context, tsk types.TipSetKey) (api.CirculatingSupply, error) {\n\treturn c.Internal.StateVMCirculatingSupplyInternal(ctx, tsk)\n}\n```",
            "summary": "StateVMCirculatingSupplyInternal returns an approximation of the circulating supply of Filecoin at the given tipset.\nThis is the value reported by the runtime interface to actors code.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "api.CirculatingSupply",
                "description": "api.CirculatingSupply",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "FilBurnt": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "FilCirculating": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "FilLocked": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "FilMined": {
                            "additionalProperties": false,
                            "type": "object"
                        },
                        "FilVested": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "FilVested": "0",
                            "FilMined": "0",
                            "FilBurnt": "0",
                            "FilLocked": "0",
                            "FilCirculating": "0"
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1074"
            }
        },
        {
            "name": "Filecoin.StateVerifiedClientStatus",
            "description": "```go\nfunc (c *FullNodeStruct) StateVerifiedClientStatus(ctx context.Context, addr address.Address, tsk types.TipSetKey) (*abi.StoragePower, error) {\n\treturn c.Internal.StateVerifiedClientStatus(ctx, addr, tsk)\n}\n```",
            "summary": "StateVerifiedClientStatus returns the data cap for the given address.\nReturns nil if there is no entry in the data cap table for the\naddress.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "addr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*abi.StoragePower",
                "description": "*abi.StoragePower",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "0",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1058"
            }
        },
        {
            "name": "Filecoin.StateVerifiedRegistryRootKey",
            "description": "```go\nfunc (c *FullNodeStruct) StateVerifiedRegistryRootKey(ctx context.Context, tsk types.TipSetKey) (address.Address, error) {\n\treturn c.Internal.StateVerifiedRegistryRootKey(ctx, tsk)\n}\n```",
            "summary": "StateVerifiedClientStatus returns the address of the Verified Registry's root key\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "address.Address",
                "description": "address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "f01234",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1062"
            }
        },
        {
            "name": "Filecoin.StateVerifierStatus",
            "description": "```go\nfunc (c *FullNodeStruct) StateVerifierStatus(ctx context.Context, addr address.Address, tsk types.TipSetKey) (*abi.StoragePower, error) {\n\treturn c.Internal.StateVerifierStatus(ctx, addr, tsk)\n}\n```",
            "summary": "StateVerifierStatus returns the data cap for the given address.\nReturns nil if there is no entry in the data cap table for the\naddress.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "addr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*abi.StoragePower",
                "description": "*abi.StoragePower",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "0",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1054"
            }
        },
        {
            "name": "Filecoin.StateWaitMsg",
            "description": "```go\nfunc (c *FullNodeStruct) StateWaitMsg(ctx context.Context, msgc cid.Cid, confidence uint64) (*api.MsgLookup, error) {\n\treturn c.Internal.StateWaitMsg(ctx, msgc, confidence)\n}\n```",
            "summary": "StateWaitMsg looks back in the chain for a message. If not found, it blocks until the\nmessage arrives on chain, and gets to the indicated confidence depth.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msgc",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "confidence",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            42
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.MsgLookup",
                "description": "*api.MsgLookup",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Height": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Message": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Receipt": {
                            "additionalProperties": false,
                            "properties": {
                                "ExitCode": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "GasUsed": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Return": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "ReturnDec": {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "TipSet": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Message": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Receipt": {
                                "ExitCode": 0,
                                "Return": "Ynl0ZSBhcnJheQ==",
                                "GasUsed": 9
                            },
                            "ReturnDec": {},
                            "TipSet": [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ],
                            "Height": 10101
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L990"
            }
        },
        {
            "name": "Filecoin.StateWaitMsgLimited",
            "description": "```go\nfunc (c *FullNodeStruct) StateWaitMsgLimited(ctx context.Context, msgc cid.Cid, confidence uint64, limit abi.ChainEpoch) (*api.MsgLookup, error) {\n\treturn c.Internal.StateWaitMsgLimited(ctx, msgc, confidence, limit)\n}\n```",
            "summary": "StateWaitMsgLimited looks back up to limit epochs in the chain for a message.\nIf not found, it blocks until the message arrives on chain, and gets to the\nindicated confidence depth.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "msgc",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "confidence",
                    "description": "uint64",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            42
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "limit",
                    "description": "abi.ChainEpoch",
                    "summary": "",
                    "schema": {
                        "title": "integer",
                        "description": "Hex representation of the integer",
                        "examples": [
                            10101
                        ],
                        "pattern": "^0x[a-fA-F0-9]+$",
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*api.MsgLookup",
                "description": "*api.MsgLookup",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Height": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        },
                        "Message": {
                            "title": "Content Identifier",
                            "type": "string"
                        },
                        "Receipt": {
                            "additionalProperties": false,
                            "properties": {
                                "ExitCode": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "GasUsed": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Return": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "ReturnDec": {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "TipSet": {
                            "additionalProperties": false,
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Message": {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            },
                            "Receipt": {
                                "ExitCode": 0,
                                "Return": "Ynl0ZSBhcnJheQ==",
                                "GasUsed": 9
                            },
                            "ReturnDec": {},
                            "TipSet": [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ],
                            "Height": 10101
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L994"
            }
        },
        {
            "name": "Filecoin.SyncCheckBad",
            "description": "```go\nfunc (c *FullNodeStruct) SyncCheckBad(ctx context.Context, bcid cid.Cid) (string, error) {\n\treturn c.Internal.SyncCheckBad(ctx, bcid)\n}\n```",
            "summary": "SyncCheckBad checks if a block was marked as bad, and if it was, returns\nthe reason.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "bcid",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "string",
                "description": "string",
                "summary": "",
                "schema": {
                    "examples": [
                        "string value"
                    ],
                    "type": [
                        "string"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "string value",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L890"
            }
        },
        {
            "name": "Filecoin.SyncCheckpoint",
            "description": "```go\nfunc (c *FullNodeStruct) SyncCheckpoint(ctx context.Context, tsk types.TipSetKey) error {\n\treturn c.Internal.SyncCheckpoint(ctx, tsk)\n}\n```",
            "summary": "SyncCheckpoint marks a blocks as checkpointed, meaning that it won't ever fork away from it.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L874"
            }
        },
        {
            "name": "Filecoin.SyncMarkBad",
            "description": "```go\nfunc (c *FullNodeStruct) SyncMarkBad(ctx context.Context, bcid cid.Cid) error {\n\treturn c.Internal.SyncMarkBad(ctx, bcid)\n}\n```",
            "summary": "SyncMarkBad marks a blocks as bad, meaning that it won't ever by synced.\nUse with extreme caution.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "bcid",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L878"
            }
        },
        {
            "name": "Filecoin.SyncState",
            "description": "```go\nfunc (c *FullNodeStruct) SyncState(ctx context.Context) (*api.SyncState, error) {\n\treturn c.Internal.SyncState(ctx)\n}\n```",
            "summary": "SyncState returns the current status of the lotus sync system.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "*api.SyncState",
                "description": "*api.SyncState",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "ActiveSyncs": {
                            "items": {
                                "additionalProperties": false,
                                "properties": {
                                    "Base": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "End": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Height": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Message": {
                                        "type": "string"
                                    },
                                    "Stage": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Start": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "Target": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "WorkerID": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "VMApplied": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "ActiveSyncs": null,
                            "VMApplied": 42
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L862"
            }
        },
        {
            "name": "Filecoin.SyncSubmitBlock",
            "description": "```go\nfunc (c *FullNodeStruct) SyncSubmitBlock(ctx context.Context, blk *types.BlockMsg) error {\n\treturn c.Internal.SyncSubmitBlock(ctx, blk)\n}\n```",
            "summary": "SyncSubmitBlock can be used to submit a newly created block to the.\nnetwork through this node\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "blk",
                    "description": "*types.BlockMsg",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "BlsMessages": {
                                "items": {
                                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "Header": {
                                "additionalProperties": false,
                                "properties": {
                                    "BLSAggregate": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Data": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "Type": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "BeaconEntries": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "Data": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                },
                                                "Round": {
                                                    "pattern": "^0x[a-fA-F0-9]+$",
                                                    "title": "integer",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "BlockSig": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "Data": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "Type": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "ElectionProof": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "VRFProof": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            },
                                            "WinCount": {
                                                "pattern": "^0x[a-fA-F0-9]+$",
                                                "title": "integer",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "ForkSignaling": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Height": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "Messages": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "Miner": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "ParentBaseFee": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "ParentMessageReceipts": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "ParentStateRoot": {
                                        "title": "Content Identifier",
                                        "type": "string"
                                    },
                                    "ParentWeight": {
                                        "additionalProperties": false,
                                        "type": "object"
                                    },
                                    "Parents": {
                                        "items": {
                                            "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                                            "title": "Content Identifier",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "Ticket": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "VRFProof": {
                                                "media": {
                                                    "binaryEncoding": "base64"
                                                },
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "Timestamp": {
                                        "pattern": "^0x[a-fA-F0-9]+$",
                                        "title": "integer",
                                        "type": "string"
                                    },
                                    "WinPoStProof": {
                                        "items": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "PoStProof": {
                                                    "pattern": "^0x[a-fA-F0-9]+$",
                                                    "title": "integer",
                                                    "type": "string"
                                                },
                                                "ProofBytes": {
                                                    "media": {
                                                        "binaryEncoding": "base64"
                                                    },
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "SecpkMessages": {
                                "items": {
                                    "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                                    "title": "Content Identifier",
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L866"
            }
        },
        {
            "name": "Filecoin.SyncUnmarkAllBad",
            "description": "```go\nfunc (c *FullNodeStruct) SyncUnmarkAllBad(ctx context.Context) error {\n\treturn c.Internal.SyncUnmarkAllBad(ctx)\n}\n```",
            "summary": "SyncUnmarkAllBad purges bad block cache, making it possible to sync to chains previously marked as bad\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L886"
            }
        },
        {
            "name": "Filecoin.SyncUnmarkBad",
            "description": "```go\nfunc (c *FullNodeStruct) SyncUnmarkBad(ctx context.Context, bcid cid.Cid) error {\n\treturn c.Internal.SyncUnmarkBad(ctx, bcid)\n}\n```",
            "summary": "SyncUnmarkBad unmarks a blocks as bad, making it possible to be validated and synced again.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "bcid",
                    "description": "cid.Cid",
                    "summary": "",
                    "schema": {
                        "title": "Content Identifier",
                        "description": "Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.",
                        "examples": [
                            {
                                "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                            }
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L882"
            }
        },
        {
            "name": "Filecoin.SyncValidateTipset",
            "description": "```go\nfunc (c *FullNodeStruct) SyncValidateTipset(ctx context.Context, tsk types.TipSetKey) (bool, error) {\n\treturn c.Internal.SyncValidateTipset(ctx, tsk)\n}\n```",
            "summary": "SyncValidateTipset indicates whether the provided tipset is valid or not\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "tsk",
                    "description": "types.TipSetKey",
                    "summary": "",
                    "schema": {
                        "examples": [
                            [
                                {
                                    "/": "bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"
                                },
                                {
                                    "/": "bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"
                                }
                            ]
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": true,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L894"
            }
        },
        {
            "name": "Filecoin.WalletBalance",
            "description": "```go\nfunc (c *FullNodeStruct) WalletBalance(ctx context.Context, a address.Address) (types.BigInt, error) {\n\treturn c.Internal.WalletBalance(ctx, a)\n}\n```",
            "summary": "WalletBalance returns the balance of the given address at the current head of the chain.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "a",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "types.BigInt",
                "description": "types.BigInt",
                "summary": "",
                "schema": {
                    "examples": [
                        "0"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "0",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L746"
            }
        },
        {
            "name": "Filecoin.WalletDefaultAddress",
            "description": "```go\nfunc (c *FullNodeStruct) WalletDefaultAddress(ctx context.Context) (address.Address, error) {\n\treturn c.Internal.WalletDefaultAddress(ctx)\n}\n```",
            "summary": "WalletDefaultAddress returns the address marked as default in the wallet.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "address.Address",
                "description": "address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "f01234",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L762"
            }
        },
        {
            "name": "Filecoin.WalletDelete",
            "description": "```go\nfunc (c *FullNodeStruct) WalletDelete(ctx context.Context, addr address.Address) error {\n\treturn c.Internal.WalletDelete(ctx, addr)\n}\n```",
            "summary": "WalletDelete deletes an address from the wallet.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "addr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L778"
            }
        },
        {
            "name": "Filecoin.WalletExport",
            "description": "```go\nfunc (c *FullNodeStruct) WalletExport(ctx context.Context, a address.Address) (*types.KeyInfo, error) {\n\treturn c.Internal.WalletExport(ctx, a)\n}\n```",
            "summary": "WalletExport returns the private key of an address in the wallet.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "a",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.KeyInfo",
                "description": "*types.KeyInfo",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "PrivateKey": {
                            "media": {
                                "binaryEncoding": "base64"
                            },
                            "type": "string"
                        },
                        "Type": {
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Type": "bls",
                            "PrivateKey": "Ynl0ZSBhcnJheQ=="
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L770"
            }
        },
        {
            "name": "Filecoin.WalletHas",
            "description": "```go\nfunc (c *FullNodeStruct) WalletHas(ctx context.Context, addr address.Address) (bool, error) {\n\treturn c.Internal.WalletHas(ctx, addr)\n}\n```",
            "summary": "WalletHas indicates whether the given address is in the wallet.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "addr",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": true,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L738"
            }
        },
        {
            "name": "Filecoin.WalletImport",
            "description": "```go\nfunc (c *FullNodeStruct) WalletImport(ctx context.Context, ki *types.KeyInfo) (address.Address, error) {\n\treturn c.Internal.WalletImport(ctx, ki)\n}\n```",
            "summary": "WalletImport receives a KeyInfo, which includes a private key, and imports it into the wallet.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "ki",
                    "description": "*types.KeyInfo",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "PrivateKey": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "Type": {
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "address.Address",
                "description": "address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "f01234",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L774"
            }
        },
        {
            "name": "Filecoin.WalletList",
            "description": "```go\nfunc (c *FullNodeStruct) WalletList(ctx context.Context) ([]address.Address, error) {\n\treturn c.Internal.WalletList(ctx)\n}\n```",
            "summary": "WalletList lists all the addresses in the wallet.\n",
            "paramStructure": "by-position",
            "params": [],
            "result": {
                "name": "[]address.Address",
                "description": "[]address.Address",
                "summary": "",
                "schema": {
                    "items": [
                        {
                            "additionalProperties": false,
                            "type": [
                                "object"
                            ]
                        }
                    ],
                    "type": [
                        "array"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": null,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L742"
            }
        },
        {
            "name": "Filecoin.WalletNew",
            "description": "```go\nfunc (c *FullNodeStruct) WalletNew(ctx context.Context, typ types.KeyType) (address.Address, error) {\n\treturn c.Internal.WalletNew(ctx, typ)\n}\n```",
            "summary": "WalletNew creates a new address in the wallet with the given sigType.\nAvailable key types: bls, secp256k1, secp256k1-ledger\nSupport for numerical types: 1 - secp256k1, 2 - BLS is deprecated\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "typ",
                    "description": "types.KeyType",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "bls"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "address.Address",
                "description": "address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "f01234",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L734"
            }
        },
        {
            "name": "Filecoin.WalletSetDefault",
            "description": "```go\nfunc (c *FullNodeStruct) WalletSetDefault(ctx context.Context, a address.Address) error {\n\treturn c.Internal.WalletSetDefault(ctx, a)\n}\n```",
            "summary": "WalletSetDefault marks the given address as as the default one.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "a",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "Null",
                "description": "Null",
                "schema": {
                    "type": [
                        "null"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {},
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L766"
            }
        },
        {
            "name": "Filecoin.WalletSign",
            "description": "```go\nfunc (c *FullNodeStruct) WalletSign(ctx context.Context, k address.Address, msg []byte) (*crypto.Signature, error) {\n\treturn c.Internal.WalletSign(ctx, k, msg)\n}\n```",
            "summary": "WalletSign signs the given bytes using the given address.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "k",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "msg",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*crypto.Signature",
                "description": "*crypto.Signature",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Data": {
                            "media": {
                                "binaryEncoding": "base64"
                            },
                            "type": "string"
                        },
                        "Type": {
                            "pattern": "^0x[a-fA-F0-9]+$",
                            "title": "integer",
                            "type": "string"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Type": 2,
                            "Data": "Ynl0ZSBhcnJheQ=="
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L750"
            }
        },
        {
            "name": "Filecoin.WalletSignMessage",
            "description": "```go\nfunc (c *FullNodeStruct) WalletSignMessage(ctx context.Context, k address.Address, msg *types.Message) (*types.SignedMessage, error) {\n\treturn c.Internal.WalletSignMessage(ctx, k, msg)\n}\n```",
            "summary": "WalletSignMessage signs the given message using the given address.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "k",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "msg",
                    "description": "*types.Message",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "From": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasFeeCap": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "GasLimit": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "GasPremium": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Method": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Nonce": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            },
                            "Params": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "To": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Value": {
                                "additionalProperties": false,
                                "type": "object"
                            },
                            "Version": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "*types.SignedMessage",
                "description": "*types.SignedMessage",
                "summary": "",
                "schema": {
                    "additionalProperties": false,
                    "properties": {
                        "Message": {
                            "additionalProperties": false,
                            "properties": {
                                "From": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasFeeCap": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "GasLimit": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "GasPremium": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Method": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Nonce": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                },
                                "Params": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "To": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Value": {
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "Version": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "Signature": {
                            "additionalProperties": false,
                            "properties": {
                                "Data": {
                                    "media": {
                                        "binaryEncoding": "base64"
                                    },
                                    "type": "string"
                                },
                                "Type": {
                                    "pattern": "^0x[a-fA-F0-9]+$",
                                    "title": "integer",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": {
                            "Message": {
                                "Version": 42,
                                "To": "f01234",
                                "From": "f01234",
                                "Nonce": 42,
                                "Value": "0",
                                "GasLimit": 9,
                                "GasFeeCap": "0",
                                "GasPremium": "0",
                                "Method": 1,
                                "Params": "Ynl0ZSBhcnJheQ==",
                                "CID": {
                                    "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                                }
                            },
                            "Signature": {
                                "Type": 2,
                                "Data": "Ynl0ZSBhcnJheQ=="
                            },
                            "CID": {
                                "/": "bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"
                            }
                        },
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L754"
            }
        },
        {
            "name": "Filecoin.WalletValidateAddress",
            "description": "```go\nfunc (c *FullNodeStruct) WalletValidateAddress(ctx context.Context, str string) (address.Address, error) {\n\treturn c.Internal.WalletValidateAddress(ctx, str)\n}\n```",
            "summary": "WalletValidateAddress validates whether a given string can be decoded as a well-formed address\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "str",
                    "description": "string",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "string value"
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "address.Address",
                "description": "address.Address",
                "summary": "",
                "schema": {
                    "examples": [
                        "f01234"
                    ],
                    "additionalProperties": false,
                    "type": [
                        "object"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": "f01234",
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L782"
            }
        },
        {
            "name": "Filecoin.WalletVerify",
            "description": "```go\nfunc (c *FullNodeStruct) WalletVerify(ctx context.Context, k address.Address, msg []byte, sig *crypto.Signature) (bool, error) {\n\treturn c.Internal.WalletVerify(ctx, k, msg, sig)\n}\n```",
            "summary": "WalletVerify takes an address, a signature, and some bytes, and indicates whether the signature is valid.\nThe address does not have to be in the wallet.\n",
            "paramStructure": "by-position",
            "params": [
                {
                    "name": "k",
                    "description": "address.Address",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "f01234"
                        ],
                        "additionalProperties": false,
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "msg",
                    "description": "[]byte",
                    "summary": "",
                    "schema": {
                        "examples": [
                            "Ynl0ZSBhcnJheQ=="
                        ],
                        "type": [
                            "string"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                },
                {
                    "name": "sig",
                    "description": "*crypto.Signature",
                    "summary": "",
                    "schema": {
                        "additionalProperties": false,
                        "properties": {
                            "Data": {
                                "media": {
                                    "binaryEncoding": "base64"
                                },
                                "type": "string"
                            },
                            "Type": {
                                "pattern": "^0x[a-fA-F0-9]+$",
                                "title": "integer",
                                "type": "string"
                            }
                        },
                        "type": [
                            "object"
                        ]
                    },
                    "required": true,
                    "deprecated": false
                }
            ],
            "result": {
                "name": "bool",
                "description": "bool",
                "summary": "",
                "schema": {
                    "examples": [
                        true
                    ],
                    "type": [
                        "boolean"
                    ]
                },
                "required": true,
                "deprecated": false
            },
            "examples": [
                {
                    "name": null,
                    "params": [],
                    "result": {
                        "value": true,
                        "name": null
                    }
                }
            ],
            "deprecated": false,
            "externalDocs": {
                "description": "Github remote link",
                "url": "https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L758"
            }
        }
    ]
}
